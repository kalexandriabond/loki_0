{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/IPython/parallel.py:13: ShimWarning: The `IPython.parallel` package has been deprecated since IPython 4.0. You should import from ipyparallel instead.\n",
      "  \"You should import from ipyparallel instead.\", ShimWarning)\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd \n",
    "import matplotlib.pyplot as plt \n",
    "import seaborn as sns\n",
    "import hddm \n",
    "from patsy import dmatrix \n",
    "import numpy as np\n",
    "from sys import platform\n",
    "# print(hddm.__version__)\n",
    "\n",
    "%matplotlib inline\n",
    "# plt.rcParams['figure.figsize'] = 30, 10\n",
    "sns.set_context(\"notebook\", font_scale=10, rc={\"lines.linewidth\": 10, \"lines.markersize\": 30})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Pre-processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "if platform == 'linux':\n",
    "    home = '/home/krista/'\n",
    "elif platform == 'darwin': \n",
    "    home = '/Users/Krista/'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/krista/Dropbox/loki_0/simple_rt_experiment_probabilityC/analysis/analysis_nbs\r\n"
     ]
    }
   ],
   "source": [
    "!pwd\n",
    "write_dir = home + 'Dropbox/loki_0/simple_rt_experiment_probabilityC/analysis/hddm_reg_models/'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_obs_data = hddm.load_csv(home + 'Dropbox/loki_0/simple_rt_experiment_probabilityC/analysis/aggregated_data/combined_learning_sig_obs_data.csv')\n",
    "all_obs_reg_data = all_obs_data.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cpp</th>\n",
       "      <th>target_B</th>\n",
       "      <th>choice_B</th>\n",
       "      <th>cp</th>\n",
       "      <th>gen_drift</th>\n",
       "      <th>gen_bound</th>\n",
       "      <th>ID</th>\n",
       "      <th>b_t0</th>\n",
       "      <th>b_t1</th>\n",
       "      <th>r_t1</th>\n",
       "      <th>...</th>\n",
       "      <th>epoch_trial_zero_idx</th>\n",
       "      <th>epoch_trial_one_idx</th>\n",
       "      <th>shifted_epoch_trial_zero_idx</th>\n",
       "      <th>repeat_trial</th>\n",
       "      <th>prop_112</th>\n",
       "      <th>n_epoch_trials</th>\n",
       "      <th>p_id_solution</th>\n",
       "      <th>obs_low_val_cue</th>\n",
       "      <th>id_choice</th>\n",
       "      <th>p_id_accuracy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.099471</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>0.013572</td>\n",
       "      <td>0.416406</td>\n",
       "      <td>761</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.528877</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>111</td>\n",
       "      <td>111</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.035079</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.013572</td>\n",
       "      <td>0.599471</td>\n",
       "      <td>761</td>\n",
       "      <td>1.390214</td>\n",
       "      <td>0.149207</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>112</td>\n",
       "      <td>112</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.023075</td>\n",
       "      <td>-1.241007</td>\n",
       "      <td>1.241007</td>\n",
       "      <td>0</td>\n",
       "      <td>0.013572</td>\n",
       "      <td>0.535079</td>\n",
       "      <td>761</td>\n",
       "      <td>0.792372</td>\n",
       "      <td>0.196591</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>112</td>\n",
       "      <td>111</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.019881</td>\n",
       "      <td>-0.595781</td>\n",
       "      <td>0.595781</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.523075</td>\n",
       "      <td>761</td>\n",
       "      <td>0.532802</td>\n",
       "      <td>0.226667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>112</td>\n",
       "      <td>112</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.018539</td>\n",
       "      <td>-0.306135</td>\n",
       "      <td>0.306135</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.519881</td>\n",
       "      <td>761</td>\n",
       "      <td>0.391376</td>\n",
       "      <td>0.251982</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>112</td>\n",
       "      <td>111</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.268538</td>\n",
       "      <td>-0.139394</td>\n",
       "      <td>0.139394</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.518539</td>\n",
       "      <td>761</td>\n",
       "      <td>0.302804</td>\n",
       "      <td>0.275119</td>\n",
       "      <td>3.036967</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>111</td>\n",
       "      <td>111</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.035630</td>\n",
       "      <td>-0.027685</td>\n",
       "      <td>0.027685</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.768538</td>\n",
       "      <td>761</td>\n",
       "      <td>1.408409</td>\n",
       "      <td>0.604046</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>112</td>\n",
       "      <td>111</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.785155</td>\n",
       "      <td>-0.804363</td>\n",
       "      <td>0.804363</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.535630</td>\n",
       "      <td>761</td>\n",
       "      <td>0.571150</td>\n",
       "      <td>0.635969</td>\n",
       "      <td>4.661588</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>111</td>\n",
       "      <td>111</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.352873</td>\n",
       "      <td>0.064818</td>\n",
       "      <td>-0.064818</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>1.285155</td>\n",
       "      <td>761</td>\n",
       "      <td>4.114561</td>\n",
       "      <td>1.314367</td>\n",
       "      <td>-0.099227</td>\n",
       "      <td>...</td>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>111</td>\n",
       "      <td>111</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.206726</td>\n",
       "      <td>-2.800194</td>\n",
       "      <td>2.800194</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.935182</td>\n",
       "      <td>0.852873</td>\n",
       "      <td>761</td>\n",
       "      <td>0.822059</td>\n",
       "      <td>1.379872</td>\n",
       "      <td>4.103838</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>10</td>\n",
       "      <td>9</td>\n",
       "      <td>10</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>111</td>\n",
       "      <td>112</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 44 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        cpp  target_B  choice_B  cp  gen_drift  gen_bound   ID      b_t0  \\\n",
       "0  0.099471  0.000000  0.000000   1   0.013572   0.416406  761  0.000000   \n",
       "1  0.035079  0.000000  0.000000   0   0.013572   0.599471  761  1.390214   \n",
       "2  0.023075 -1.241007  1.241007   0   0.013572   0.535079  761  0.792372   \n",
       "3  0.019881 -0.595781  0.595781   0  -1.000000   0.523075  761  0.532802   \n",
       "4  0.018539 -0.306135  0.306135   0  -1.000000   0.519881  761  0.391376   \n",
       "5  0.268538 -0.139394  0.139394   0  -1.000000   0.518539  761  0.302804   \n",
       "6  0.035630 -0.027685  0.027685   0  -1.000000   0.768538  761  1.408409   \n",
       "7  0.785155 -0.804363  0.804363   0  -1.000000   0.535630  761  0.571150   \n",
       "8  0.352873  0.064818 -0.064818   0  -1.000000   1.285155  761  4.114561   \n",
       "9  0.206726 -2.800194  2.800194   0  -0.935182   0.852873  761  0.822059   \n",
       "\n",
       "       b_t1      r_t1      ...        epoch_trial_zero_idx  \\\n",
       "0  0.000000  2.528877      ...                           0   \n",
       "1  0.149207  0.000000      ...                           1   \n",
       "2  0.196591  0.000000      ...                           2   \n",
       "3  0.226667  0.000000      ...                           3   \n",
       "4  0.251982  0.000000      ...                           4   \n",
       "5  0.275119  3.036967      ...                           5   \n",
       "6  0.604046  0.000000      ...                           6   \n",
       "7  0.635969  4.661588      ...                           7   \n",
       "8  1.314367 -0.099227      ...                           8   \n",
       "9  1.379872  4.103838      ...                           9   \n",
       "\n",
       "   epoch_trial_one_idx  shifted_epoch_trial_zero_idx  repeat_trial  prop_112  \\\n",
       "0                    1                             0             1  0.305556   \n",
       "1                    2                             1             2  0.305556   \n",
       "2                    3                             2             3  0.305556   \n",
       "3                    4                             3             4  0.305556   \n",
       "4                    5                             4             5  0.305556   \n",
       "5                    6                             5             6  0.305556   \n",
       "6                    7                             6             7  0.305556   \n",
       "7                    8                             7             8  0.305556   \n",
       "8                    9                             8             9  0.305556   \n",
       "9                   10                             9            10  0.305556   \n",
       "\n",
       "   n_epoch_trials  p_id_solution  obs_low_val_cue  id_choice  p_id_accuracy  \n",
       "0              36            111              111        111              1  \n",
       "1              36            111              112        112              0  \n",
       "2              36            111              112        111              1  \n",
       "3              36            111              112        112              0  \n",
       "4              36            111              112        111              1  \n",
       "5              36            111              111        111              1  \n",
       "6              36            111              112        111              1  \n",
       "7              36            111              111        111              1  \n",
       "8              36            111              111        111              1  \n",
       "9              36            111              111        112              0  \n",
       "\n",
       "[10 rows x 44 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_obs_data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cpp</th>\n",
       "      <th>target_B</th>\n",
       "      <th>choice_B</th>\n",
       "      <th>cp</th>\n",
       "      <th>gen_drift</th>\n",
       "      <th>gen_bound</th>\n",
       "      <th>ID</th>\n",
       "      <th>b_t0</th>\n",
       "      <th>b_t1</th>\n",
       "      <th>r_t1</th>\n",
       "      <th>...</th>\n",
       "      <th>epoch_trial_zero_idx</th>\n",
       "      <th>epoch_trial_one_idx</th>\n",
       "      <th>shifted_epoch_trial_zero_idx</th>\n",
       "      <th>repeat_trial</th>\n",
       "      <th>prop_112</th>\n",
       "      <th>n_epoch_trials</th>\n",
       "      <th>p_id_solution</th>\n",
       "      <th>obs_low_val_cue</th>\n",
       "      <th>id_choice</th>\n",
       "      <th>p_id_accuracy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.099471</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>0.013572</td>\n",
       "      <td>0.416406</td>\n",
       "      <td>761</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.528877</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>111</td>\n",
       "      <td>111</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.035079</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0.013572</td>\n",
       "      <td>0.599471</td>\n",
       "      <td>761</td>\n",
       "      <td>1.390214</td>\n",
       "      <td>0.149207</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>112</td>\n",
       "      <td>112</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.023075</td>\n",
       "      <td>-1.241007</td>\n",
       "      <td>1.241007</td>\n",
       "      <td>0</td>\n",
       "      <td>0.013572</td>\n",
       "      <td>0.535079</td>\n",
       "      <td>761</td>\n",
       "      <td>0.792372</td>\n",
       "      <td>0.196591</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>112</td>\n",
       "      <td>111</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.019881</td>\n",
       "      <td>-0.595781</td>\n",
       "      <td>0.595781</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.523075</td>\n",
       "      <td>761</td>\n",
       "      <td>0.532802</td>\n",
       "      <td>0.226667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>112</td>\n",
       "      <td>112</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.018539</td>\n",
       "      <td>-0.306135</td>\n",
       "      <td>0.306135</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.519881</td>\n",
       "      <td>761</td>\n",
       "      <td>0.391376</td>\n",
       "      <td>0.251982</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>36</td>\n",
       "      <td>111</td>\n",
       "      <td>112</td>\n",
       "      <td>111</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 44 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        cpp  target_B  choice_B  cp  gen_drift  gen_bound   ID      b_t0  \\\n",
       "0  0.099471  0.000000  0.000000   1   0.013572   0.416406  761  0.000000   \n",
       "1  0.035079  0.000000  0.000000   0   0.013572   0.599471  761  1.390214   \n",
       "2  0.023075 -1.241007  1.241007   0   0.013572   0.535079  761  0.792372   \n",
       "3  0.019881 -0.595781  0.595781   0  -1.000000   0.523075  761  0.532802   \n",
       "4  0.018539 -0.306135  0.306135   0  -1.000000   0.519881  761  0.391376   \n",
       "\n",
       "       b_t1      r_t1      ...        epoch_trial_zero_idx  \\\n",
       "0  0.000000  2.528877      ...                           0   \n",
       "1  0.149207  0.000000      ...                           1   \n",
       "2  0.196591  0.000000      ...                           2   \n",
       "3  0.226667  0.000000      ...                           3   \n",
       "4  0.251982  0.000000      ...                           4   \n",
       "\n",
       "   epoch_trial_one_idx  shifted_epoch_trial_zero_idx  repeat_trial  prop_112  \\\n",
       "0                    1                             0             1  0.305556   \n",
       "1                    2                             1             2  0.305556   \n",
       "2                    3                             2             3  0.305556   \n",
       "3                    4                             3             4  0.305556   \n",
       "4                    5                             4             5  0.305556   \n",
       "\n",
       "   n_epoch_trials  p_id_solution  obs_low_val_cue  id_choice  p_id_accuracy  \n",
       "0              36            111              111        111              1  \n",
       "1              36            111              112        112              0  \n",
       "2              36            111              112        111              1  \n",
       "3              36            111              112        112              0  \n",
       "4              36            111              112        111              1  \n",
       "\n",
       "[5 rows x 44 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_obs_data.columns = all_obs_data.columns.str.strip()\n",
    "all_obs_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['cpp', 'target_B', 'choice_B', 'cp', 'gen_drift', 'gen_bound', 'ID',\n",
       "       'b_t0', 'b_t1', 'r_t1', 'r_t2', 'obs_cp', 'ideal_B', 'B_ideal_target',\n",
       "       'B_nonideal_target', 'LR_choice', 'obs_LR_accuracy', 'obs_LR_solution',\n",
       "       'reward', 'cumulative_reward', 'rt', 'total_trial_time', 'iti',\n",
       "       'cp_with_slow_fast', 'obs_cp_with_slow_fast', 'obs_high_val_cue',\n",
       "       'ID.1', 'condition', 'coded_condition', 'original_trial', 'epoch_n',\n",
       "       'epoch_trial', 'shifted_epoch_trial', 'max_epoch_n',\n",
       "       'epoch_trial_zero_idx', 'epoch_trial_one_idx',\n",
       "       'shifted_epoch_trial_zero_idx', 'repeat_trial', 'prop_112',\n",
       "       'n_epoch_trials', 'p_id_solution', 'obs_low_val_cue', 'id_choice',\n",
       "       'p_id_accuracy'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_obs_data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_data = hddm.load_csv(home + 'Dropbox/loki_0/simple_rt_experiment_probabilityC/analysis/aggregated_data/combined_learning_sig_obs_data.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'cumulative_reward')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAADHAAAAdfCAYAAAD/p+/hAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAIABJREFUeJzs3W2M5WdZx/HftSxsEdvapPQhLrWFmAop0BZW1NJQLazQGB+CWoslikYajRApaGNMSqPGRKpJm/hCorIKScUo8SFiGmkNZCkFaaGh8tBYtS4bWhXcFGlrheX2xU4Nws7M/z+ca87OzOeTnOyLvf7nvs7cTV/Nd0+NMQIAAAAAAAAAAAAAAECfXcteAAAAAAAAAAAAAAAAYLsTcAAAAAAAAAAAAAAAADQTcAAAAAAAAAAAAAAAADQTcAAAAAAAAAAAAAAAADQTcAAAAAAAAAAAAAAAADQTcAAAAAAAAAAAAAAAADQTcAAAAAAAAAAAAAAAADQTcAAAAAAAAAAAAAAAADQTcAAAAAAAAAAAAAAAADQTcAAAAAAAAAAAAAAAADQTcAAAAAAAAAAAAAAAADTbvewFANg8VbUnyb4kDyY5uuR1AAAAAAAAAAAAAGCrelKSs5N8eIzx+JQHBBwAO8u+JAeXvQQAAAAAAAAAAAAAbBOXJnn/lEEBB8DO8mCSHDx4MHv37l32LgAAAAAAAAAAAACwJR0+fDiXXnppsvL7uVMIOAB2lqNJsnfv3px77rlLXgUAAAAAAAAAAAAAtryjUwd3dW4BAAAAAAAAAAAAAACAgAMAAAAAAAAAAAAAAKCdgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKCZgAMAAAAAAAAAAAAAAKDZ7mUvAAAAAADA8l1++eULeZ/bb799Ie8DAAAAAAAA241v4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGgm4AAAAAAAAAAAAAAAAGi2e9kLAAAAALB4h371ucteAdhyzljIu/j/DzDXOdffu+wVAAAAAABgU/gGDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYCDgAAAAAAAAAAAAAAgGYC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AAAAAAAAwGAKHAAAAAAAAAAAAAAAAIMpcAAAAAAAAAAAAAAAAAymwAEAAAAAAAAAAAAAADCYAgcAAAAAAAAAAAAAAMBgChwAAAAAAAAAAAAAAACDKXAAAAAAAAAAAAAAAAAMpsABAAAAAAAAAAAAAAAwmAIHAAAAAAAAAAAAAADAYAocAAAAAAAAAAAAAAAAgylwAAAAAAAAAAAAAAAADKbAAQAAAAAAAAAAAAAAMJgCBwAAAAAAAAAAAAAAwGAKHAAAAAAAAAAAAAAAAIMpcAAAAAAAAAAAAAAAAAymwAEAAAAAAAAAAAAAADCYAgcAAAAAAAAAAAAAAMBgChwAAAAAAAAAAAAAAACDKXAAAAAAAAAAAAAAAAAMpsABAAAAAAAAAAAAAAAwmAIHAAAAAAAAAAAAAADAYAocAAAAAAAAAAAAAAAAgylwAAAAAAAAAAAAAAAADKbAAQAAAAAAAAAAAAAAMJgCBwAAAAAAAAAAAAAAwGAKHAAAAAAAAAAAAAAAAIMpcAAAAAAAAAAAAAAAAAymwAEAAAAAAAAAAAAAADCYAgcAAAAAAAAAAAAAAMBgChwAAAAAAAAAAAAAAACDKXAAAAAAAAAAAAAAAAAMpsABAAAAAAAAAAAAAAAwmAIHAAAAAAAAAAAAAADAYAocAAAAAAAAAAAAAAAAgylwAAAAAAAAAAAAAAAADKbAAQAAAAAAAAAAAAAAMJgCBwAAAAAAAAAAAAAAwGAKHAAAAAAAAAAAAAAAAIMpcAAAAAAAAAAAAAAAAAymwAEAAAAAAAAAAAAAADCYAgcAAAAAAAAAAAAAAMBgChwAAAAAAAAAAAAAAACDKXAAAAAAAAAAAAAAAAAMpsABAAAAAAAAAAAAAAAwmAIHAAAAAAAAAAAAAADAYAocAAAAAAAAAAAAAAAAgylwAAAAAAAAAAAAAAAADKbAAQAAAAAAAAAAAAAAMJgCBwAAAAAAAAAAAAAAwGAKHAAAAAAAAAAAAAAAAIMpcAAAAAAAAAAAAAAAAAymwAEAAAAAAAAAAAAAADCYAgcAAAAAAAAAAAAAAMBgChwAAAAAAAAAAAAAAACDKXAAAAAAAAAAAAAAAAAMpsABAAAAAAAAAAAAAAAwmAIHAAAAAAAAAAAAAADAYAocAAAAAAAAAAAAAAAAgylwAAAAAAAAAAAAAAAADKbAAQAAAAAAAAAAAAAAMJgCBwAAAAAAAAAAAAAAwGAKHAAAAAAAAAAAAAAAAIMpcAAAAAAAAAAAAAAAAAymwAEAAAAAAAAAAAAAADCYAgcAAAAAAAAAAAAAAMBgChwAAAAAAAAAAAAAAACDKXAAAAAAAAAAAAAAAAAMpsABAAAAAAAAAAAAAAAwmAIHAAAAAAAAAAAAAADAYAocAAAAAAAAAAAAAAAAgylwAAAAAAAAAAAAAAAADKbAAfx/9u492Lqzrg/495eXEAKEJIIQQEISizQWhACJcokCAoV6gakCpSUgLRedQriIMLWdCirTUagTnI5AixJMCwIjrak4XCKiGBNuIcMQuQjyCgESJeYCuSAJT//YB0PJPu9Z65zz7LXOPp/PzJlkeH9rPb/9e94ha/Z5vnsDAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAAAAAAAAAAAEBnAhwAAAAAAAAAAAAAAACdCXAAAAAAAAAAAAAAAAB0JsABAAAAAAAAAAAAAADQmQAHAAAAAAAAAAAAAABAZwIcAAAAAAAAAAAAAAAAnQlwAAAAAAAAAAAAAAAAdCbAAQAAAAAAAAAAAAAA0JkABwAAAAAAAAAAAAAAQGcCHAAAAAAAAAAAAAAAAJ0JcAAAAAAAAAAAAAAAAHQmwAEAAAAAAAAAAAAAANCZAAcAAAAA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\n",
      "text/plain": [
       "<Figure size 3600x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3600x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3600x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(50,30))\n",
    "sns.barplot(x=\"condition\",y=\"cp_with_slow_fast\", data=test_data, ci=95, n_boot=1000, units=\"ID\" )\n",
    "plt.ylabel('n change points')\n",
    "\n",
    "plt.figure(figsize=(50,30))\n",
    "sns.barplot(x=\"condition\",y=\"p_id_accuracy\", data=test_data, ci=95, n_boot=1000, units=\"ID\")\n",
    "plt.ylabel('accuracy')\n",
    "\n",
    "plt.figure(figsize=(50,30))\n",
    "sns.barplot(x=\"condition\",y=\"cumulative_reward\", data=test_data, ci=95, n_boot=1000,units=\"ID\")\n",
    "plt.ylabel('cumulative_reward')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'$\\\\Delta B$')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3600x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#do a reg. with deltaB as the dv and CPP as the predictor\n",
    "plt.figure(figsize=(50,30))\n",
    "sns.barplot(x=\"condition\",y=\"ideal_B\", data=all_obs_data, ci=95, n_boot=1000,units=\"ID\")\n",
    "plt.ylabel('$\\Delta B$')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'$\\\\Omega$')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAADLYAAAduCAYAAABFIEUPAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAIABJREFUeJzs3WmwZWd1HuB3tVpIzJIBgZQWdCPbmMEMApGyGSwHGwhxKqQwdhJmGxInNhhsCClcZs5AgSlIXISExIDBRTB/YmwRYaASWcRhlGQjCFAINdAMYrDAjAJJKz/uVSyBbvfet8++37ndz1N1qlXS2vt7T9dZ+rXf2tXdAQAAAAAAAAAAAAAAgJ22Z3QAAAAAAAAAAAAAAAAAjk+KLQAAAAAAAAAAAAAAAAyh2AIAAAAAAAAAAAAAAMAQii0AAAAAAAAAAAAAAAAModgCAAAAAAAAAAAAAADAEIotAAAAAAAAAAAAAAAADKHYAgAAAAAAAAAAAAAAwBCKLQAAAAAAAAAAAAAAAAyxd3QAjj9VdWqSuya5bZJbbn4qyV8n+XqSLyf5v9195bCQwCT2GQAAAAAAAAAAAAA4GtXdozNwjKuqH0nyiCQPT3KfJLefeOkVSS5Ocn6S87r7E8skJEmqqpKcleR+SX4009/o9Iru/upiwVgr9hkAAAAAAAAAAAAAWCXFFhZRVScl+SdJnpbk3iu67SVJXpnkTd191YruedyqqgNJ7puNIsv9Nv/5lG3c6kB3H1xhtJWpqv1JLh8cY6pndffLRoe4MfYZAAAAAAAAAAAAAFiKYgsrVVV7kjwlyQuTnLbQMV9M8twkr+nuaxc645hSVWfmbwos15VYbrOi2yu2rMbaFVvsMwAAAAAAAAAAAACwtL2jA3DsqKp7J/nPSc5Z+KjTkrw6yS9V1T/t7r9Y+LxdparOyA0LLPfLcqUEjlH2GQAAAAAAAAAAAADYCYotrERVPS4bD8GfvIPH3j/Je6rqKd39xh08dy1V1X9L8uAkp4/Owu5mnwEAAAAAAAAAAACAnbJndAB2v6p6aZLfz84+BH+dk5O8YTPD8e7hUWrhKNlnAAAAAAAAAAAAAGAnKbZwVKrqd5I8c3SOJM+sqpeNDgG7mX0GAAAAAAAAAAAAAHaaYgvbVlXPT/Ibo3Ncz29W1fNGh4DdyD4DAAAAAAAAAAAAACPsHR2A3amqHplkOw+dX5PkHUnOS/KBJJ9KcmWSSnJqkgNJ7pfk55L8ncwvXz2/qi7p7j/aRjY4LtlnAAAAAAAAAAAAAGCU6u7RGdhlqmp/kouTnDLjsquT/JckL+ruz00858wkz03ypCQnzDjryiRnd/fBGdfselX11SS3HnD0gXX9u978rV4+OMZUz+rul+30ofYZAAAAAAAAAAAAABhJsYVZqqqS/FmSB8647GCSn+/uD27zzPsneUuSO8647N3d/aDtnLdbraDYcnWSj2TjzRv3TnL2xOuOhWLLBd197qJh1pB9BgAAAAAAAAAAAABG2zM6ALvO4zLvIfgPJrnvdh+CT5Lufl+S+ya5ZMZlD6yqx273zOPANUkuTfK6JE9N8hNJbtXd9+ruX07yoYHZ2Dn2GQAAAAAAAAAAAAAYyhtbmKyqbpnk40nuMPGSDyd5cHf/1YrOv2023i5x14mXfD7JXbr766s4f90d5o0t1yb5aDbexPLBzT8v7u5vH+Zer0vyhIlHe2PLLmSfAQAAAAAAAAAAAIB1sHd0AHaVZ2T6Q/DfTPKoVT0EnyTd/eWq+vkk709yswmXnJ7k6UletKoMu8C12SgrfCB/U2S5uLu/OTQV68g+AwAAAAAAAAAAAADD7RkdgN2hqm6a5KkzLnlGd39s1Tm6+yNJnjXjkqduZj8ePDzJrbv7rt39uO5+ZXe/W6mF72efAQAAAAAAAAAAAIB1odjCVL+c5LYTZy9K8l8XzPKfkvzlxNnbJXnSglnWRne/p7u/MToHu4J9BgAAAAAAAAAAAADWgmILU/3ajNlnd/e1SwXp7muSPHvGJU9bKgvsUvYZAAAAAAAAAAAAAFgLe0cHYP1V1TlJ7jJx/JLufueSeZKku8+vqkuT3GPC+F2q6n7d/YGlc8G6s883rqpOSnJOks8nuWaV9wYAAAAAAAAAAACA48gJSU5P8v7uvmrKBYotTPHYGbOvWCzFD3plktdMnH1MEsUWsM9bOSfJhSu+JwAAAAAAAAAAAAAcrx6U5N1TBqu7F87CblZVe5J8LsntJ4x/O8lp3f2NZVNtqKpbJ7kiyUkTxr+Q5Iz2g5+kql6X5AkTxw9098Hl0mxfVe1PcvmE0Qu6+9xFw6wB+3zY889K8okLL7ww+/btW9VtAQAAAAAAAAAAAOC4cujQoTzoQQ9Kkh/u7sumXOONLRzJ2Zn2EHyS/MlOPQSfJN39tap6W5J/OGH8Dknuk+SiZVPBWrPPW7smSfbt25f9+/ev8LYAAAAAAAAAAAAAcFy6ZurgniVTcEz42Rmzb10sxWrOnPNd4FhknwEAAAAAAAAAAACAtaLYwpH8zIzZdy6WYjVnehCe4519BgAAAAAAAAAAAADWimILW6qqE5M8YOL4h7v7C0vmuTHdfSjJxyaOP2DzO8Fxxz4DAAAAAAAAAAAAAOtIsYXDuUeSkybOvnfJICs6++Qkd1syCKwx+wwAAAAAAAAAAAAArB3FFg7nPjNmL1osxZF9YMbs2YulgPVmnwEAAAAAAAAAAACAtaPYwuHMeWh85IPwH5wxO+fhfjiW2GcAAAAAAAAAAAAAYO0otnA495wx+9HFUhzZx2bMzvlOcCyxzwAAAAAAAAAAAADA2tk7OgBr7c4T577S3VcumuQwuvsrVXVlklMnjE/9ThyHqqqS3CPJ/bPxhpOzkhxIcpskN09yYpJvb36+meSzSQ4l+VSSv8jG20Y+3t294+GPzD4DAAAAAAAAAAAAAGtHsYUbVVUnJTlj4vgnlswy0SeSnDNh7m9V1U26+7tLB2JX2VdVr03yiCSnHWH2Fpuf2yXZfyP//atV9adJzktyXnd/ZZVBt8M+AwAAAAAAAAAAAADras/oAKytOyWpibOfXjLIRJ+ZOLcnyR2XDMKudFaSJ+bIpZYpTknyC0len+SzVfXGqnrACu57NOwzAAAAAAAAAAAAALCWFFvYyv4Zs19YKsQMczIcWCwF3NBJSR6T5N1V9T+r6m8PyrF/xqx9BgAAAAAAAAAAAAB2jGILW5nz5op1eBD+8zNmV/FWDpjr3CTv2XyDyw/t8Nn2GQAAAAAAAAAAAABYS4otbOU2M2avWCzFdHMyzPlusGqPSXJpVT1sB8+0zwAAAAAAAAAAAADAWlJsYStzHhb/68VSTDcnw06/LQO+3+lJ3lZVv75D59lnAAAAAAAAAAAAAGAtKbawlTkPi3sQHubbk+QVVfWKHTjLPgMAAAAAAAAAAAAAa0mxha2cMmP264ulmG5OhjnfDZb261X1koXPsM8AAAAAAAAAAAAAwFraOzoAa+ukGbPfXCzFdN+YMTvnu3HsuybJJ5Ncuvn5cJJPZeOtIV/b/PNb2fjd3CzJ6Un2Jbl7krOT/HSSOxxlhn9ZVVd098uP8j5bsc/XU1Wn5AcLMfvm3gcAAAAAAAAAAAAAOHqKLWzlxBmzVy+WYro5GW6yWAp2i08m+aMk70ryZ9095Q0h39r8fDnJh5L8jySpqkpynyRPSPK4JKduM9NLqup93f3ubV5/OPb5hp6e5HnbuA4AAAAAAAAAAAAAWDHFFrYy52Hx4+FBeHa/K5L8QZI3dPclq7ppd3eSi5JcVFW/lY3SxLOS3GrmrfYmeXNV3a27v7aqfJvs8w29Isnrvu/f7Uty4TbuBQAAAAAAAAAAAAAchT2jA7C2PAjPsaCTvCfJP0qyr7t/c5Wllh84rPsb3f3iJHdPcv42bnFGkhetNlUS+3wD3f3V7j54/U+SQ3PvAwAAAAAAAAAAAAAcPcUWtjLnt3HNYimmm5PB7/440d2f6u6f6O43d/eOFTa6+1CSRyR58TYu/xdVdY8VR7LPAAAAAAAAAAAAAMBa8kAwW5lTAti7WIrp5mT43mIpYFNv+O0kT5156QlJfmvFcewzAAAAAAAAAAAAALCWFFvYyndnzK7Dg/Anzpj1IDw7prt/N8nzZl726Krav8IY9hkAAAAAAAAAAAAAWEuKLWxltz0IPyfDnO8Gq/CiJOfNmD8hyVNWeL59BgAAAAAAAAAAAADWkmILW5nzFoSbLJZiujlvePAgPDuquzvJryT5xozLHr3CCPYZAAAAAAAAAAAAAFhLii1s5ZszZm+5WIrpbjVj9luLpYAtdPehJC+dccmPVNU9V3S8fQYAAAAAAAAAAAAA1pJiC1u5csbsnIfQlzInw18tlgIO7z9k3ltbzl3RufYZAAAAAAAAAAAAAFhLii1s5SszZtfhDQ9zMngQniG6+8ok/33GJT+5oqPtMwAAAAAAAAAAAACwlhRb2Mqch8V/aLEU0506Y3bOQ/6wam+ZMXv/FZ1pnwEAAAAAAAAAAACAtaTYwlbmPCx+h8VSTHf6jFlveGCkC5P0xNk7VtWJKzjTPgMAAAAAAAAAAAAAa0mxha0cmjG7Dg/Cz8kw57vBSnX3lUk+PnH8hCRnruBY+wwAAAAAAAAAAAAArCXFFrZycMbsnLcrLGVOhssXSwHTfGLG7L4VnHdwxqx9BgAAAAAAAAAAAAB2jGILW/lCkm9PnL3zkkEmOmvi3Le6+4pFk8CRfWbG7C1XcJ59BgAAAAAAAAAAAADWkmILN6q7O8mnJo7fuaqG/Zaq6oQk+yeOH1wuCUz2jRmzNzvaw+wzAAAAAAAAAAAAALCuFFs4nI9NnLtJkjsuGeQI7pTkxImzH18yCEz0nRmzJ6/oTPsMAAAAAAAAAAAAAKwdxRYO55IZs/dcLMVqz754sRQw3ZyyypwSzOHYZwAAAAAAAAAAAABg7Si2cDgXzZg9e7EUR3bfGbNzvhMs5RYzZr+5ojPtMwAAAAAAAAAAAACwdhRbOJw5D43PeRh91eac7Q0PrIMzZ8yOKLbYZwAAAAAAAAAAAABgRyi2sKXuPpTksxPHH1BVO/57qqoTkvzkxPHPdvfU7wNL+uEZsyv5zdpnAAAAAAAAAAAAAGAdKbZwJO+cOHdqxrzl4f5Jbj1x9h1LBoEpquqUJD86cfzaJJ9e4fH2GQAAAAAAAAAAAABYK4otHMmch8cfuliK1ZzpQXjWwYOT1MTZz3b3d1d4tn0GAAAAAAAAAAAAANaKYgtH8s4kPXH20UsG2cIvTJzrTH9bBSxpzp58YMVn22cAAAAAAAAAAAAAYK0otnBY3X1Fkv8zcfxeVXXXJfNcX1XdK8ndJo7/7+7+4pJ54Eiq6tQkj5xxyZ+v8nz7DAAAAAAAAAAAAACsG8UWpviDGbNPWSzFD3ryjNk53wGW8mtJbjFj/sIFMthnAAAAAAAAAAAAAGBtKLYwxZuTfG/i7JOr6tZLhkn+/5svnjRx/HtJ3rJgHDiiqjojybNmXHIoyfsWiGKfAQAAAAAAAAAAAIC1odjCEXX3V5K8deL4LZM8bcE413lGkptPnH3r5neAIaqqkrw6G/sx1Vu6u1edxT4DAAAAAAAAAAAAAOtEsYWpXjZj9tmbb6dYRFWdmeSZMy556UI5zq2qnvHZv0QOdoXnJPn7M+Y7ye8tlCWxzwAAAAAAAAAAAADAmlBsYZLufk+SCyeO3zzJq5bIsfnmi/+Y5KYTL7mgu9+7RBbWU1XdfnSG66uqX0ny4pmXva27L10iT2KfAQAAAAAAAAAAAID1odjCHP96xuw/qKqnLZDhN5L8vRnzczJzbPjnVfW+qnrYyBC14bezvVLIv1l1nhthnwEAAAAAAAAAAACA4RRbmKy7357kT2Zc8vKqetSqzq+qX0zykhmX/HF3v2NV57OrnJPk/Kr6YFU9vqpuspOHV9UZSd6a5IVJaublb+juP199qhuyzwAAAAAAAAAAAADAOlBsYa6nJ7lq4uwJSd5UVU882kOr6slJ3rh5zymuykZWjm9nJ3l9kkNV9e+r6pwlD6uqm1fVv0rykSQ/t41bXJnkmatNdVj2GQAAAAAAAAAAAAAYSrGFWbr7smy8hWKqE5O8tqp+r6puO/e8qjqtqn4/yWuS7J1x6Qu6+5Nzz9vtquqJVdVH+0nyhBnHXr6CMw8u9FdyndsleWqS91XVp6vq1VX1yKo6bRU3r6p7V9XLk3wqyb9Ncutt3KaTPK67v7iKTJMOtM8AAAAAAAAAAAAAwGBzHiyG6/y7JOcm+dkZ1zwpyaOq6neTvL67P3644aq6azbKFb+a5BYz8/1pkpfMvIbjx5lJ/tnmJ1V1eZKLk3w0yceTHEpyRZIvJflWNt4W8r0kJye5aZLTk+xLcvdsvBHmp5OcsYJcL+ju81Zwn7nsMwAAAAAAAAAAAAAwjGILs3X3tVX12GyUAeY80H+rJM9J8pyquizJ+5McTPLVJJXklCR3TnK/JAe2Ge+zSR7b3ddu83qOPwey/d/bqryqu18w4mD7DAAAAAAAAAAAAACMpNjCtnT3F6vqoUkuSHKbbdzirM3PKn05ycO6+0srvi8s6VXd/asjA9hnAAAAAAAAAAAAAGCUPaMDsHt194eTPDTJ10ZnyUaGh25mgt3g6iRPH11quY59BgAAAAAAAAAAAABGUGzhqHT3RUkemOSygTEuS/KA7r54YAaY42CSn+nuV44Ocn32GQAAAAAAAAAAAADYaYotHLXuvjTJOUnePuD485Oc480O7BJXJ/mdJHfv7gtGh7kx9hkAAAAAAAAAAAAA2EmKLaxEd1/Z3Q9P8vgkV+zAkVckeXx3/93uvnIHzmP3+EiST48O8X2uTvLaJD/W3c/s7m+NDnQ49hkAAAAAAAAAAAAA2CmKLaxUd78hyV2SvDDJlxY44oub977L5llwA939h919pyQ/luSpSf44ydcHxflkkucnOau7f6m7LxuUY1vsMwAAAAAAAAAAAACwtOru0Rk4RlXVSUn+cZJfTHJukpO3eatvJ/lfSf4wyZu6+6pV5OP4UVV7k9wryX2v9/nxJDdZ8VFXJ3lvknckeXt3v2fF9x/mWN/nqtqf5PLLL788+/fvHxsGAAAAAAAAAAAAAHapgwcP5sCBA0lyoLsPTrlm76KJOK5tPrD+uiSvq6qbJvmpJPdJcrdsvE3jdkluuflJNt6q8fVsvBnio0k+kuTiJBd097d3NDzHlO6+OskHNz9Jkqo6MRu/w/1J7rT52Z9kX5JbJblZkptv/nnTbJRWrkrynSRfS/L5JJ9L8pls/Fb/MsmHu/s7O/CVdpx9BgAAAAAAAAAAAACWoNjCjth8kP38zQ8M193fS/KhzQ8z2GcAAAAAAAAAAAAAYFX2jA4AAAAAAAAAAAAAAADA8UmxBQAAAAAAAAAAAAAAgCH2jg4AAAAAAADr6iEPechK7vOud71rJfcBAAAAAACAY403tgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMMTe0QEAAAAAYKd8+oU/PjoCsOuctpK7+P8PMNcdn/uh0REAAAAAAGBHeGMLAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMIRiCwAAAAAAAAAAAAAAAEMotgAAAAAAAAAAAAAAADCEYgsAAAAAAAAAAAAAAABDKLYAAAAAAAAAAAAAAAAwhGILAAAAAAAAAAAAAAAAQyi2AAAAAAAAAAAAAAAAMMTe0QEAAAAAAGBdvfanvjg6AgAAAAAAABzTvLEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAA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AAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAAAAAYQrEFAAAAAAAAAAAAAACAIRRbAAAAAAAAAAAAAAAAGEKxBQAAAAAAAAAAAAAAgCEUWwAAAAAAAAAAAAAAABhCsQUAAAAAAAAAAAAAAIAhFFsAAAAAAAAAAAAA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AEMItgAAAAAAAAAAAAAAADCEYAsAAAAAAAAAAAAAAABDCLYAAAAAAAAAAAAAAAAwhGALAAAAAAAAAAAAAAAAQwi2AAAAAAAAAAAAAAAAMIRgCwAAAAAAAAAAAAAAAEMItgAAAAAAAAAAAAAAADCEYAsAAAAAAAAAAAAAAABDCLYAAAAAAAAAAAAAAAAwhGALAAAAAAAAAAAAAAAAQwi2AAAAAAAAAAAAAAAAMIRgCwAAAAAAAAAAAAAAAEMItgAAAAAAAAAAAAAAADCEYAsAAAAAAAAAAAAAAABDCLYAAAAAAAAAAAAAAAAwhGALAAAAAAAAAAAAAAAAQwi2AAAAAAAAAAAAAAAAMIRgCwAAAAAAAAAAAAAAAEMItgAAAAAAAAAAAAAAADCEYAsAAAAAAAAAAAAAAABDCLYAAAAAAAAAAAAAAAAwhGALAAAAAAAAAAAAAAAAQwi2AAAAAAAAAAAAAAAAMIRgCwAAAAAAAAAAAAAAAEMItgAAAAAAAAAAAAAAADCEYAsAAAAAAAAAAAAAAABDCLYAAAAAAAAAAAAAAAAwhGALAAAAAAAAAAAAAAAAQwi2AAAAAAAAAAAAAAAAMIRgCwAAAAAAAAAAAAAAAEMItgAAAAAAAAAAAAAAADCEYAsAAAAAAAAAAAAAAABDCLYAAAAAAAAAAAAAAAAwhGALAAAAAAAAAAAAAAAAQwi2AAAAAAAAAAAAAAAAMIRgCwAAAAAAAAAAAAAAAEMItgAAAAAAAAAAAAAAADCEYAsAAAAAAAAAAAAAAABDCLYAAAAAAAAAAAAAAAAwhGALAAAAAAAAAAAAAAAAQwi2AAAAAAAAAAAAAAAAMIRgCwAAAAAAAAAAAAAAAEMItgAAAAAAAAAAAAAAADCEYAsAAAAAAAAAAAAAAABDCLYAAAAAAAAAAAAAAAAwhGALAAAAAAAAAAAAAAAAQwi2AAAAAAAAAAAAAAAAMIRgCwAAAAAAAAAAAAAAAEMItgAAAAAAAAAAAAAAADCEYAsAAAAAAAAAAAAAAABDCLYAAAAAAAAAAAAAAAAwhGALAAAAAAAAAAAAAAAAQwi2AAAAAAAAAAAAAAAAMIRgCwAAAAAAAAAAAAAAAEMItgAAAAAAAAAAAAAAADCEYAsAAAAAAAAAAAAAAABDCLYAAAAAAAAAAAAAAAAwhGALAAAAAAAAAAAAAAAA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AAAAAADAEIotAAAAAAAAAAAAAAAADKHYAgAAAAAAAAAAAAAAwBCKLQAAAAAAAAAAAAAAAAyh2AIAAAAAAAAAAAAAAMAQii0AAAAAAAAAAAAAAAAModgCAAAAAAAAAAAAAADAEIotAAAAAAAAAAAAAAAADKHYAgAAAAAAAAAAAAAAwBCKLQAAAAAAAAAAAAAAAAyh2AIAAAAAAAAAAAAAAMAQii0AAAAAAAAAAAAAAAAModgCAAAAAAAAAAAAAADAEIotAAAAAAAAAAAAAAAADKHYAgAAAAAAAAAAAAAAwBCKLQAAAAAAAAAAAAAAAAyh2AIAAAAAAAAAAAAAAMAQii0AAAAAAAAAAAAAAAAModgCAAAAAAAAAAAAAADAEIotAAAAAAAAAAAAAAAADKHYAgAAAAAAAAAAAAAAwBCKLQAAAAAAAAAAAAAAAAyh2AIAAAAAAAAAAAAAAMAQii0AAAAAAAAAAAAAAAAModgCAAAAAAAAAAAAAADAEIotAAAAAAAAAAAAAAAADKHYAgAAAAAAAAAAAAAAwBCKLQAAAAAAAAAAAAAAAAyh2AIAAAAAAAAAAAAAAMAQii0AAAAAAAAAAAAAAAAModgCAAAAAAAAAAAAAADAEIotAAAAAAAAAAAAAAAADKHYAgAAAAAAAAAAAAAAwBCKLQAAAAAAAAAAAAAAAAyh2AIAAAAAAAAAAAAAAMAQii0AAAAAAAAAAAAAAAAModgCAAAAAAAAAAAAAADAEIotAAAAAAAAAAAAAAAADKHYAgAAAAAAAAAAAAAAwBCKLQAAAAAAAAAAAAAAAAyh2AIAAAAAAAAAAAAAAMAQii0AAAAAAAAAAAAAAAAModgCAAAAAAAAAAAAAADAEIotAAAAAAAAAAAAAAAADKHYAgAAAAAAAAAAAAAAwBCKLQAAAAAAAAAAAAAAAAyh2AIAAAAAAAAAAAAAAMAQii0AAAAAAAAAAAAAAAAModgCAAAAAAAAAAAAAADAEIotAAAAAAAAAAAAAAAADKHYAgAAAAAAAAAAAAAAwBCKLQAAAAAAAAAAAAAAAAyh2AIAAAAAAAAAAAAAAMAQii0AAAAAAAAAAAAAAAAModgCAAAAAAAAAAAAAADAEIotAAAAAAAAAAAAAAAADKHYAgAAAAAAAAAAAAAAwBCKLQAAAAAAAAAAAAAAAAyh2AIAAAAAAAAA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AAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANCFYAsAAAAAAAAAAAAAAABdCLYAAAAAAAAAAAAAAADQhWALAAAAAAAAAAAAAAAAXQi2AAAAAAAAAAAAAAAA0IVgCwAAAAAAAAAAAAAAAF0ItgAAAAAAAAAAAAAAANDF9Xo3wP5TVccmuXOSmyc5euOnklye5IokX03yqdbaJd2a3MfszzBzGWYuAAAAAAAAAAAAAMB2CLYwu6q6Y5IfT/KoJPdMcquR112U5GNJ3pbkLa21z83W5D5mf4aZyzBzAQAAAAAAAAAAAAB2kmALs6iqI5P86yTPTnKPLb7MrbI6PP+oJKdW1TlJXp7kDa21a3ak0X3K/gwzl2HmAgAAAAAAAAAAAADM5bDeDbC3VNVhVfWMJF9I8vvZ+iH4IfdI8tokX6iqZ1SVv78T2Z9h5jLMXAAAAAAAAAAAAACAuTlIzI6pqnskOSvJq5Lccsalbrmxxgeq6u4zrrOn2J9h5jLMXAAAAAAAAAAAAACAdRBsYUdU1SlJPpDkvmtc9n5JzqqqJ61xzV3J/gwzl2HmAgAAAAAAAAAAAACsi2AL21ZVL03yuiQ36LD8DZKcvtEDA+zPMHMZZi4AAAAAAAAAAAAAwDoJtrAtVfVfkzy/dx9Jnl9VL+vdxNLYn2HmMsxcAAAAAAAAAAAAAIB1E2xhy6rqRUme17uP7/JLVfVrvZtYCvszzFyGmQsAAAAAAAAAAAAA0MP1ejfA7lRVj02ylUPn1yZ5Z5K3JPlIkr9NckmSSnJskpOS3CfJo5M8LNPDVy+qqnNaa3+6hd72DPszzFyGmQsAAAAAAAAAAAAA0ItgC5NV1YlJXjvxsm8meU2S/9xa+/ImNVcl+XKSM5O8vKpul+Q/JXlqksMnrPXaqrpXa+3AxB73BPszzFyGmQsAAAAAAAAAAAAA0NPUb89nn6uqSnJ6kmMmXHYgyQ+31n7hIIfgr6O19sXW2tOSPCDJFyasd+xGj/uO/RlmLsPMBQAAAAAAAAAAAADoTbCFqU5J8qAJ9R9Ncu/W2ke3umBr7UNJ7p3knAmXPaiqnrTVNXcx+zPMXIaZCwAAAAAAAAAAAADQlWALo1XV0Ul+c8Il5yZ5ZGvt77e7dmvtq0kekeRTEy77rY2e9wX7M8xchpkLAAAAAAAAAAAAALAEgi1M8dwkx42s/XqSn96JQ/DftnEY/meSXDnyklsnec5Orb8L2J9h5jLMXAAAAAAAAAAAAACA7gRbGKWqjkryrAmXPLe19pmd7qO19skkvzzhkmdt9L6n2Z9h5jLMXAAAAAAAAAAAAACApRBsYax/l+TmI2vPTvJ7M/by6iQfH1l7iyRPnbGXpbA/w8xlmLkAAAAAAAAAAAAAAIsg2MJYz5xQ+8LW2rfmaqS1dm2SF0645Nlz9bIg9meYuQwzFwAAAAAAAAAAAABgEQRbOKSqum+SO40sP6e19q45+0mS1trbknxiZPmdquo+c/bTk/0ZZi7DzAUAAAAAAAAAAAAAWBLBFsZ40oTaU2fr4rpePqH238zWRX/2Z5i5DDMXAAAAAAAAAAAAAGAxBFs4qKo6LMkTRpZfleSPZ2zne70pyTUja/9VVdWczfRgf4aZyzBzAQAAAAAAAAAAAACWRrCFQ7lXkluNrP2z1trX5mzmu7XWLkvy1pHlxyW554zt9GJ/hpnLMHMBAAAAAAAAAAAAABZFsIVDecSE2jNm62Jn1pzyXnYL+7P91zKXYftpLgAAAAAAAAAAAABAJ4ItHMrDJ9S+a7YudmbNvXgQ3v4MM5dh5gIAAAAAAAAAAAAALIpgC5uqqiOSPHBk+bmttQvn7GdIa+38JJ8ZWf7Ajfe0J9ifYeYyzFwAAAAAAAAAAAAAgCUSbOFg7prkyJG1H5yzkR1a+wZJ7jJnI2tmf4aZyzBzAQAAAAAAAAAAAAAWR7CFg7nnhNqzZ+vi0D4yofZes3WxfvZnmLkMMxcAAAAAAAAAAAAAYHEEWziYKYfGex6E/+iE2imH+5fO/gwzl2HmAgAAAAAAAAAAAAAsjmALB/ODE2o/PVsXh/aZCbVT3tPS2Z/tv4a5DNtPcwEAAAAAAAAAAAAAOhJs4WBuP7Lu4tbaJbN2chCttYuTjF1/7HvaDezP9l7DXIbtt7kAAAAAAAAAAAAAAB0JtjCoqo5McpuR5Z+bs5eRxvZw26q6/qydrIH9GWYuw8wFAAAAAAAAAAAAAFgqwRY2c0KSGln7hTkbGemLI+sOS3L8nI2sif0ZZi7DzAUAAAAAAAAAAAAAWCTBFjZz4oTaC+dqYoIpPZw0Wxfrc+KE2v20PydOqDWXYftpLgAAAAAAAAAAAABAZ4ItbOaWE2qXcBD+ggm1U97bUtmf7V9rLsP201wAAAAAAAAAAAAAgM4EW9jMzSbUXjRbF+NN6WHKe1sq+7P9a81l2H6aCwAAAAAAAAAAAADQmWALm5lyWPzy2boYb0oP3zdbF+tjf4aZyzBzAQAAAAAAAAAAAAAWSbCFzUw5LO4g/PrZn+1fay7D9tNcAAAAAAAAAAAAAIDOBFvYzDETaq+YrYvxpvQw5b0tlf3Z/rXmMmw/zQUAAAAAAAAAAAAA6Ox6vRtgsY6cUPv12boY72sTaqe8t6WyP9u/1lyG7fm5VNUxuW4g5oQkOf/886e+3J52zWVf6d0CAMAoBw4c6N0Cu8iXLvmH3i0AAIzyLfe5jHT1xVf3bgEAYBSf5TLFBVe7zwUAdgf3udf1XedxDx97jWALmzliQu03Z+tivCk9XH+2LtbH/gwzl2Hm8v97TpJfG/qDBz/4wVt4OQAAejvpd5/fuwUAANh5p57UuwMAANhRJ73YPS4AAHvQSe5zD+LWSc4bUyjYwmamHBbfDwfhl8b+bP9acxm2H+ZyapLTBl7n9kn+Osm1W3hNAMb5/iTvT/LgJB6TBQDAXuE+FwCAvcY9LgAAe5H7XID1OTyrUMuHx14g2MJmHIRfNvuz/WvNZdien0tr7dIklw780WenvhYA01TVt//x/NbagY6tAADAjnGfCwDAXuMeFwCAvch9LsDajXpSy7cdNlcX7HpT/m4s4ekGU3rYC3/v7c/2rzWXYftpLgAAAAAAAAAAAABAZw4Es5kpT0xYwpN/pvTwjdm6WB/7M8xchpkLAAAAAAAAAAAAALBIgi1s5h8m1C7hIPwRE2r3wkF4+zPMXIaZCwAAAAAAAAAAAACwSIItbGa3HYSf0sOU97ZU9mf715rLsP00FwDW79IkL974XwAA2Cvc5wIAsNe4xwUAYC9ynwuwYEs4wMwyTXkKwvVn62K8KU942AsH4e3PMHMZZi4ALEJr7dIkL+rdBwAA7CT3uQAA7DXucQEA2Ivc5wIsmye2sJmvT6g9erYuxrvJhNorZ+tifezPMHMZZi4AAAAAAAAAAAAAwCIJtrCZSybUTjmEPpcpPfz9bF2sj/0ZZi7DzAUAAAAAAAAAAAAAWCTBFjZz8YTaJTzhYUoPe+EgvP0ZZi7DzAUAAAAAAAAAAAAAWCTBFjYz5bD4983WxXjHTqidcsh/qezPMHMZZi4Au0xVtTE/vfsEAIAx3N8CAMA4VXXayPvnh/TuFQAADsa9LQBTCbawmSmHxY+brYvxbj2hdi884cH+DDOXYeYCAAAAAAAAAAAAACySYAubOX9C7RIOwk/pYcp7Wyr7s/1rzWXYfpoLAAAAAAAAAAAAANCZYAubOTChdsrTFeYypYfPz9bF+hyYULuf9ufAhFpzGbaf5gIAAAAAAAAAAAAAdCbYwmYuTHLVyNrbz9nISHcYWXdla+2iWTtZD/szzFyGmQsAAAAAAAAAAAAAsEiCLQxqrbUkfzuy/PZV1e3vUlUdnuTEkeUH5utkfezPMHMZZi4AAAAAAAAAAAAAwFIJtnAwnxlZd/0kx8/ZyCGckOSIkbWfnbORNbM/w8xlmLkAAAAAAAAAAAAAAIsj2MLBnDOh9gdn62Jn1/7YbF2sn/0ZZi7DzAUAAAAAAAAAAAAAWBzBFg7m7Am195qti0O794TaKe9p6ezP9l/DXIbtp7kAAAAAAAAAAAAAAB0JtnAwUw6NTzmMvtOmrL2XnvBgf4aZyzBzAQAAAAAAAAAAAAAWR7CFTbXWzk/ypZHlD6yqtf99qqrDkzxgZPmXWmtj38/i2Z9h5jLMXAAAAAAAAAAAAACAJRJs4VDeNbLu2PR5ysP9ktx0ZO0752ykE/szzFyGmQsAAAAAAAAAAAAAsCiCLRzKlMPjj5yti51Zcy8ehLc/238tcxm2n+YCAAAAAAAAAAAAAHQi2MKhvCtJG1n7uDkb2cTjR9a1jH9axW5if4aZyzBzAQAAAAAAAAAAAAAWRbCFg2qtXZTkAyPL715Vd56zn+9WVXdPcpeR5We21v5uzn56sD/DzGWYuQAAAAAAAAAAAAAASyPYwhj/a0Lt02br4rp+bkLtlPew29if7b+muQzbT3MBAAAAAAAAAAAAADqo1lrvHli4qrpZkguSHDGi/Iokt2utXTZzT8cm+WKSG40o/0aSW7fWLp6zp17sz6Y9mMtwD+YCsAtU1aib9NZazd0LAABsl/tbAAAYp6pOS/KUEaUPba29d95uAABg69zbAjCVJ7ZwSBsHyM8YWX50kmfP2M63PTfjDsEnyRl7+RC8/RlmLsPMBQAAAAAAAAAAAABYEsEWxnrZhNoXVtVt5mqkqm6X5PkTLnnpTH08pKrahJ8T5+hjg/0ZZi7DzAUAAAAAAAAAAAAAWATBFkZprZ2V5P0jy2+U5Hfm6KOqKskrkxw18pL3tdY+OEcvS2J/hpnLMHMBAAAAAAAAAAAAAJZCsIUpXjKh9jFV9ewZenhekp+YUD+l593O/mx/DXMZtp/mAgAAAAAAAAAAAACskWALo7XW3p7kzyZc8ttV9dM7tX6IILy+AAAgAElEQVRVPSHJb0645P+01t65U+svnf0ZZi7DzAUAAAAAAAAAAAAAWIJqrfXugV2kqu6Q5NwkR4685BtJnt5aO22b6/5cklcmud7IS65JcpfW2t9sZ91D9PSQJH8+4ZKTWmsH5ulmxf4MM5dh5gKwXFU16ia9tVYTX/fGSR6e5J5J7pbkB5Ick+SmSY5KcnWSrye5KMnnk3w6yZlJzmytXTxlrd2gqm6Y5PgkJ2Q1gxtu/CTJ5Umu2Pjfy5J8rrV2eY8+AQB2O/e3AAAwTlWdluQpI0of2lp777zdbF1VHZ3V567HJzk63/ns9dp853PXy5NcktVnr1d2ahUAgJnslXtbANZn7KFiSJK01s6rql9P8pKRlxyR5LVV9SNJXtBa++qU9arqlkleluSUaZ3mxfvxELz9GWYuw8wFYH+oqsOTPC6rf//+aA4eaLzRxs8tszoY+FMb//+1VfWeJKcneUNr7ZvzdTyPqjoiyYOTPCDJDyW5T5LjJr7G+Uk+leSTSc5K8q6p/z0EAGB7dtv9bVU9J6uwzaF8uLX2lrn62IqqOizJr2bc7xHe01r7i5lbAgBggarqqCQPTfLDGz/3SnKzCS/RqupAvvPZ65lZ3V/6oiEAAK5j4zPiX01y+Ijyd7bWzpy5pUmq6pgkzxlZ/ubW2sfn7AdgSTyxhck2fqH5tiSPmHjp5Un+e5I/aK199hBr3DmrtO6/T3Ljieu8I8nJrbVvTbxukiU+sSWxP5sxl2HmArBMO/GN1hv/jn9akhcmOWmHWkuSA1mFDk/bwdecxcYMTk7yhCQ/mXEHCqdoSc7O6r9Xf9pa++AOvz4AwJ6wn+9vq+rVSZ4+ovRvkvyTtqAP7Kvqx7L63GiM+7bWPjJnPwAA+8Fu+VbrjS8S+pdZhc5PzneehL1TvpnVlwu9I8n/bq19YodfHwCAmc15b1tVb0/yyBGlf95ae9iU155bVT0jyatGlF6b5PtbaxfO3BLAYgi2sCUbT174WJLbbPElzkvy4ax+cXxpksrqoOHts/r27K3+cvpLSe7ZWvvKFq8fbanBlsT+bMZchpkLwPJs9+BfVd0tyWuS3G8n+/oe70nys621L864xpZsfEPgU7P6lpM7rnHpTyT5H0lOb61dusZ1AQAWbT/f31bV/ZP81cjyH2mtvX8n19+Oqnp9kieOKD23tXbXufsBANgPlh5s2fh26Z9P8swkt13j0h/I6rPXN7bWrlzjugAAbNHMwZYnJnn9iNKW5MTW2hemvP6cquqvktx/ROlbWmuPnrsfgCURbGHLquqfJXlfpj1GeE5fTfKQ1tq561hsycGWxP5sxlyGmQvAsmzn4F9V/XySVyQ5Yqf7GnBhkse01j60hrVGqarHJ3lpkuM7tnFVklNaa3/csQcAgMXY7/e3VfWZJD8wovQ1rbWn7eTaW1VVN8lqHkeNKH9Ba+2lM7cEALAvLDXYUlWHZ/UExd9I398nXpbk5NbaBzr2AADACDMHW45KckGSm44o/4+ttZdMef25VNUdk3x2ZPnjW2tvmrMfgKU5rHcD7F4bB84fmdWHR71dluSRDsF/h/0ZZi7DzAVg96uqw6vq1CSvzHoO/SXJcUneXVVzfnP2KFV126p6d5I/St9QS7I6/He7zj0AAOxqe+z+9g9G1j1+4xeyS/C4jAu1XJvkf87cCwAAHVXVnZN8JKt7895fknfTJLfq3AMAAJ211q5K8saR5WPCNevy5JF1lyQ5Y85GAJZIsIVtaa2dneRBSc7r2MZ5SR7YWvtYxx4Wyf4MM5dh5gKwe1VVJXlNkl/ssPyNk7y1qu7QYe0kSVWdnOScJA/r1QMAADtnD97fnp7kWyPqbpLksTu47naM/WXvO1prF8zaCQAA3VTVU7IKtdyjdy8AAPA9xn6h0B2r6v6zdjLCxufep4ws/8PW2jVz9gOwRIItbFtr7RNJ7pvk7R2Wf1uS+3qyw+bszzBzGWYuALvWS5P8bMf1b5bk9VW1rm/S/kdV9cwkb0ly83WvDQDAbPbU/W1r7YtJ3jOyvPu3B1bVSVl9+ckYp83YCgAAHVXVb2V1v3fDzq0AAMB1tNbOTPLXI8u7f+6a5CFJThhZe9p8bQAsl2ALO6K1dklr7VFZPSrtojUseVGSJ7fWTm6tXbKG9XY1+zPMXIaZC8DuUlXPSPJLI8uvTPL+rD4E+Y0kv5Lk+UlelOR3k/xFkqu32Mr9krxgi9duSVX9hyT/LUmtc10AAOazh+9vx3574MOr6tY7uO5WPDnj7rEvTXLGzL0AALBmVXVYVb06yS/37gUAAA7hdSPrnlBVR87ayaE9eWTdp1prH5q1E4CFul7vBthbWmunV9UZSZ6X5BeS3GKHl/i7JK9K8tuttct2+LX3PPszzFyGmQvA8lXV3ZKceoiyy5KcnuSPkpzVWvvmIV7zyCQ/keTZSf75xJZ+pap+v7V2wcTrJquq52V1eHGrrkpyZpK/TPLxJJ9P8uUkX9/4syOTHJXkVkluk+ROSe6a5IeS3D3J4dtYGwCAAXv8/vbNSX4nydGHqDs8yZOyempNL2N/wfqHrbWtBocAAFiuU5M8fRvXX5bV565/meTcrD57vTCrYPrVSW6Q1VNgjkty2yR3zuqz1/tv/LMvMgIAYKzXJfn1HPoe8pgkP5XkTbN3NKCqbpjkZ0aWj/2SJIA9p1prvXtgj9r4pfETkzwhq8eo3WCLL3VVkvcmeWOSN7TWrtmJ/vY7+zPMXIaZC8B6VdXYm/RPJ/mnm/zZ1Un+S5JTW2uXb7GPxyR5dVbhjrFe0Vr7xa2sN9ZGX2/O1p5AeWZWwco/aa19bYvr3yTJjyZ5bJKfTHLsQNlzW2uHOpQJALAvuL/9x/V/L8m/HVF6bmvtrjux5lRV9eCsnnQzxv1ba2fN2Q8AwH5TVaclecqI0oe21t47w/rPSvKKLV7+1qyenPh/t/o7wKq6eZIfy+qz1x/PKgDzvf5Fa+1PttgjAABrsq5726p6d5KHjSh9S2vt0VtdZzuq6pSMe7rMt5Ic31r70swtASySYAtrUVVHZfWNiPdMcpesfkF9i6y+ofDb31J4xcbPV7L6JfYnk3wsyftaa1etu+f9xP4MM5dh5gIwvwkH/zZzdpLHt9bO24FeTkjy9qyeWDLGFf+PvTsPs+2u6sT9WUlIQkKYZxASkFlGRTogEAahlVHQyBhEkAbF1tZWuxsbFRzaVmx/0tjSIF4SwiAyKIIMYRKZB5kTkCHMCQm0JGQe1u+PU5EQkty9q84++1TV+z5PPSB3fff61Lnn7ir32Wt/k9xwszcbDshz8yy+v4NHLv1Ikl9e9oe9G8OfD03yc1kMu1zEYAsAwAa/3/5b73skefvA8h/q7g9utedYVfX8JE8YUPqp7r6sISQAADZpzsGWjd9X35Lxu1W/PYtrrx9ecp5DkhyZ5D8kufPF/shgCwDANrDCwZajMmyXk/OzuNZ78mZ7bVZVHZfvvp/gsryxu+8/dR6AdWWwBQAA1swWb/x7VZJHL3OQcOPmv/dm+JOtn9zdz11W/4vl2DfJPyX5dyOWXZjkt5P8QXefv+xMF1dVt0/y60kekeRXDbYAACz4/fbf+laSzyS5yYDyyXdCvKSNh5mclOTKA8r/W3f/wcSRAAB2nbkGW6rqSkk+muSwEcvOSfJLSf5vT3zjycbOgv8li11cDLYAAGwDKxxsOTiL65pXGlD+K939vzbbazOq6oZJvpBknwHlj+rul0wcCWBtDTlRAgAA28Nrkvz0snfH6u4vJHniiCU/tcz+F/OfM26o5YwkD+7uZ0491JIk3f2R7n50ktslef/U/QAAdoEd9fvtxs1+Rw8sf1RVXWEZfUd4aIYNtVyY5JiJswAAsFp/lHFDLV9Pco/ufu7UQy1J0t3v6O4HJLlrFsPiAACQJOnuM5L8zcDyIYM2y/bYDLtX+1tJDHADu5rBFgAA2Bk+mcXTO86b4uDd/fdJ/mFg+RFVddVl9q+qayZ52oglZyV5UHe/dpk5hujuT3T3O1fdFwBgh9mpv9++MMmQG/+umcXTqFdp6Ie6b+7uL0+aBACAlamqWyd50oglpya5T3e/b6JIl6m7393dH191XwAA1t6egXW3r6rbTxnkUhw1sO6vl/2QJ4DtxmALAABsf+dncdPftyfu87sD6/ZNcrcl9/7NJIeMqH9Md791yRkAAFiNHfv7bXefmOQfB5av7OmBVXX9JPcdWP7CKbMAALByv5/h946cm8UDhQyXAACwTv4xyecH1q7yuutdktxyYLnrrsCuZ7AFAAC2vz/r7o9M3aS735XFk7OHWNpgS1VdO8mTRyx5Vne/cln9AQBYuR39+22GPz3wAVV1jSX2vTyPyWKAZ29OS+J3bQCAHaKq7pDkISOW/Gp3v2eqPAAAsBnd3UmOHlj+qKrab8o8FzN0iOYz3f3OSZMAbAMGWwAAYHs7I8n/WGG/oTex3XGJPX82yQEDaz+Txe4uAABsT7vh99u/yeL73Jv9kzxiiX0vz1ED617e3WdNmgQAgFUa80ChdyR5zlRBAABgi45O0gPqrpPk/hNnSVXtn+SnB5bbrQUgBlsAAGC7O7a7T1lhvzcNrBu6ne7lqqpK8nMjlvxyd5+9jN4AAMxiR/9+myTd/e0krxhYPvSJfptWVT+Y5DYDy/dMGAUAgBWqqisledTA8k7yCxtPwgYAgLXT3Z/LYhh7iMmvuyZ5UJKrD6gbs9sMwI5msAUAALa3PSvu98EkFw6ou3FVHbiEfocnucnA2g9292uX0BMAgPnsWXG/Vf9+e5GhT+C7c1Xdaol9L83QD3E/293/NGkSAABW6cFJDhlY+6ru/tiUYQAAYAmGXnd9cFVdbdIkw6+7vrW7vzhpEoBtwmALAABsX6ckec8qG3b3GUm+MKC0stjCd6seNKL2j5fQDwCA+eyG328v8taBfZMJnx5YVVdI8siB5UM/FAYAYHsYc+31jyZLAQAAy/PyJGcOqDsgyU9PFaKqrpXkxwaW75kqB8B2Y7AFAAC2rzd3d8/Q9zMD6669hF4PGFj3rSSvXkI/AADmsxt+v02SbHyfxwwsf0xVTXUt/8eTXHNAXSc5eqIMAACsWFXtm+T+A8s/3d0rHUAHAIDN6O7Tk7xyYPlRE0Z5VJL9BtR9O8PzAux4BlsAAGD7+tBMfb8+sO4aW2lSVddIctuB5a/u7rO30g8AgNnt6N9vL8XQHVBukOQ+S+59kaG7wbytu4fuMAMAwPq7Q5KrDax9yZRBAABgyfYMrDu8qm4+UYah111fvrGrOAAx2AIAANvZx2bqe+rAuitusc8Pjqh94xZ7AQAwv53+++136e7PJHnnwPKhH4QOtjFIPnSHxKFDOAAAbA+uvQIAsFO9NckXB9YufdeWqrptkjsOLHfdFeBiDLYAAMD29aWZ+g7dGeWALfa504jat2yxFwAA89vpv99emj0D636iqg5Zcu9HJtl/QN0ZSf5myb0BAJjX0Guv307yvimDAADAMnX3hUmOGVj+2KqqJUcY+pCizyf5xyX3BtjWDLYAAMD2ddJMfc8ZWLfVG/9+YGDd17p7rtcCAIDl2em/316av05y1oC6g5L85JJ7D30a4d909xlL7g0AwLyGXnv9WHefP2kSAABYvqE7odwoyRHLalpV+yZ51MDyo7u7l9UbYCcw2AIAANvXmTP1HXpxZatPNrnRwLqPbbEPAADrYaf/fvu9jbtPS/KqgeVDn/S3V1V1qyR3Hli+Z1l9AQBYG669AgCwY3X3vyR518DypV13TXK/JNcbUNdJjl5iX4AdwWALAABsX2fPHWBiNxxY95lJUwAAsCo7/ffbyzL06YH3qKpDl9Rz6Ie1X0jy9iX1BABgDVTVPhl2s13i2isAANvX0OuuD6+qg5fUc+h113d09+eW1BNgxzDYAgAA29Qu2Jb2BgPrvjZpCgAAVmIX/H57WY5L8pUBdZXkqK0227iR8TEDy4/exX8vAAA71XWS7Dew1rVXAAC2q5dl2MOUrpTk4VttVlVXSfKQgeVDh24AdhWDLQAAwNqpqgOS7D+w/KQpswAAwJS6+8Ikxwws3/JgS5L7ZPgQuQ9YAQB2niuPqHXtFQCAbam7v5Xk1QPLl3Hd9cgkBw6oOzPJy5fQD2DHMdgCAACsoyuOqD1jshQAALAaQwdIblpVd9tir8cNrPun7v7sFnsBALB+XHsFAGC3GHrd9V5V9X1b7DX0uusru/v0LfYC2JEMtgAAAOtozIerQ7YPBgCAtdXdJyR578DyoR+Qfo+qOiTJTwws37PZPgAArDXXXgEA2C3elOSrA+r2SfLYzTapqpsmGfpAoj2b7QOw0xlsAQAA1tF+I2ovmCwFAACsztCnBx5ZVQdussdPJTloQN1ZSV6+yR4AAKw3114BANgVuvuCJC8aWL7pBwqNWPulJG/dQh+AHc1gCwAAsI7GPAnwgMlSAADA6rwkyTkD6q6S5CGb7HHUwLpXdvdpm+wBAMB6c+0VAIDdZM/AuptX1V3GHryqKsljBpYf3d0Xju0BsFsYbAEAANbRWSNqN/u0agAAWBvd/a9J/m5g+einB1bVoUnuMbB86O4xAABsP669AgCwa3T38UneP7B8M7u23CPJYQNrj97E8QF2DYMtAADAOhrz4erVJksBAACrtWdg3f2q6nojj31UkhpQ9+Ukbx55bAAAto8zR9S69goAwE6wZ2DdI6pq7K6FQ4dh3tXdnx55bIBdxWALAACwdrr7giTfHFg+9oY+AABYV29IctKAun2TPHrksY8aWHdMd1848tgAAGwfp4yode0VAICd4KVJzhlQd7UkDxp60Ko6KMlPDiy3SzbAXhhsAQAA1tWXB9bdcNIUAACwIhsD3i8aWD50UCVVdbckNx1Y7gNWAIAdrLtPT3LawHLXXgEA2Pa6+5tJXjOwfPB11yQ/keSQAXVnJ3nZiOMC7EoGWwAAgHX1pYF1t540BQAArNbQwZLbVtUdB9Y+bmDde7r7UwNrAQDYvlx7BQBgtxl63fXHquraA2uHXnd9dXd/a2AtwK5lsAUAAFhXnxlYd+uq2nfSJAAAsCLd/fEkHxxYvtcPTqvqwCRHDjzenoF1AABsb0Ovvd520hQAALA6r09y8oC6/ZI8am9FVXWDJPcZ2HvPwDqAXc1gCwAAsK4+NLDuwCR3mjIIAACs2NCnBz6qqvbbS81Dk1xlwLHOTvKygX0BANjehl57/f4RT6sGAIC11d3nJzl2YPmQnVgem2H3YH81yXED+wLsagZbAACAdTX0w9Vk+JNQAABgO3hxknMH1F0ryY/tpeaogT3/trv/dWAtAADb29Brr5Xk3lMGAQCAFdozsO4OVbW33QuHXnc9prsvGFgLsKsZbAEAANbV8UlOG1j74CmDAADAKnX3N5K8dmD5ZT49sKqum+R+A48zdJcYAAC2v/cm6YG1rr0CALAjdPfHkvzzwPLLu+565yS3Gngc110BBjLYAgAArKWNp5a8cWD54VV10ynzAADAiu0ZWPegqrr6ZfzZY5LsO+AYX8vw370BANjmuvuUJB8cWP6QqrrSlHkAAGCF9gyse3RVXda11cscermE93X38QNrAXY9gy0AAMA6G/qU6iR50mQpAABg9V6X5JQBdfsnecRl/NlRA3u9aGOwHACA3WPotdeDkjx2yiAAALBCL05y3oC66ya5/yX/x6q6vOuxl2S3FoARDLYAAADr7O8z7KJSkjylqq46ZRgAAFiV7j4/iw9Zh/ieJwRW1Z2S3Hbgeh+wAgDsPq8cUftrVbXfZEkAAGBFuvvULB4qNMSl7czywCTXGLD2nCQvHZoLAIMtAADAGtu4qPTqgeWHJPnNCeMAAMCq7RlY98NVdctL/G9Dd2v5QHd/YngkAAB2gu7+aJL3Dyw/LMmTJ4wDAACrtGdg3YMv5eGaQ6+7vqa7vzk8EgAGWwAAgHX33BG1v1RVQ59KDQAAa627P5zkIwPL/+0D1Y2naT9q4Dq7tQAA7F5jrr3+blVdd7IkAACwOq9NcuqAugOTHHnR/1FV10zy4wN7uO4KMJLBFgAAYN29JcmHB9bul+SlVXXwhHkAAGCVhn4A+tiquuia/48nudaANecmecmmUgEAsBO8OMlJA2uvkuTYqtp3wjwAADC57j4vi9+Fh3jcxf77o5JcYcCak5O8fmwugN3OYAsAALDWuruTPG3EklsneaEPWAEA2CGOTXL+gLobJrn3xn9/3OUVXszfd/c3NpUKAIBtr7vPSvLMEUvuneSPJ4oDAACrNPSBQnetqu/f+O9Dr7se291DrukCcDEGWwAAgLXX3a9L8o4RSx6e5AUXe2L1SlVVzdEXAICdp7u/nuQfBpYfVVVXT/LAgfV7NhUKAICd5HlJPjui/peraswwzFK59goAwDJ094eSfGxg+VFVdZskdxpYv2dToQB2OYMtAADAdvEfkpwzov6oJK+pqqtMlOd7VNX1q+rPkzxlVT0BANgVhj498GFJfi7J/gNqxwzMAACwQ3X3eVlce+0Ry36zql5QVQdMFOt7VNXNquolSR60qp4AAOx4Q6+7HpXk8QNr/7m7hw7MAHAxBlsAAIBtobuPT/L0kct+PMmHquq+E0T6N1V1q6q66MmGT8mwGwkBAGCo1yT55oC6g5P8zsBjHtvd528+EgAAO0V3vznJX4xc9vgk76mqH5wg0r+pqh+uqpclOT7JI+I+FwAAludFSYZcI71xkqcOPOaeTacB2OX8P/wAAMB28qwkbxy55iZJ3lRVr6qqH1pWkKq6alU9vqr+McknkzwxyYHLOj4AAFyku89N8pKB5UOfmj30aYQAAOwOv5bkoyPX3CHJe6vqr6rqFssKUlXXqapfrKoPJXlvkiOT7Lus4wMAQJJ098lJ3jCwfMh11/OSvHjziQB2N4MtAADAttHdF2TxIebxm1j+0CTvr6r3VdV/2thlpYYurqoDqurwqvqNqjouySlJXpDk7pvIAgAAY+1Z4rE+3N0fWeLxAADY5rr7jCQPSnLyyKX7JvmZJJ+sqrdW1X+oqpuMOUBVHVxV96qqp1fVu5J8NcmfJbnjyCwAADDWniUe67XdfeoSjwewq+w3dwAAAIAxuvtbVfXAJP+Y5AabOMSdN77+JMk3q+pjST6f5CtJzkxydpIrJDkoybWTXD/JzZPcLJ4KCADATLr7A1X1iSS3WcLh7NYCAMD36O4vVtWDkhyX5Mojl++T5IiNr1TVSUk+keRzWQzLnJnknCT7Jzk4yXWyuL57yySHJRn8ECIAAFii1yT5ZpKrL+FYrrsCbIHBFgAAYNvp7s9V1T2SvCXJjbdwqKsnuefGFwAArLsXJvmfWzzG+UmOXUIWAAB2oO5+f1XdJ8kbsrWb+6678XWfpQQDAIAJdPc5VfXSJD+/xUOdmuS1S4gEsGvtM3cAAACAzejuzyW5e5KPzJ0FAABW5EVJLtjiMV7X3acsIwwAADtTd38gyb2SfGHuLAAAsALL2Gnlxd193hKOA7BrGWwBAAC2re7+UpLDk/zV3FkAAGBq3f21JG/c4mH2LCEKAAA7XHd/NMmdkrxu7iwAADCl7n5fkuO3eJg9S4gCsKsZbAEAALa17j6ru382ySOSfHXuPAAAMLGtPD3wG0leu6wgAADsbN39zSQPTPLUJN+aOQ4AAExpK9ddP9bd/7y0JAC7lMEWAABgR+julyW5ZZJnJTlrphhfSvJbSV48U38AAHa+Vyf5102ufXF3n7vMMAAA7Gy98Jwkt8hi5+zzZ4pyQpJfSfLmmfoDALCzHZPkgk2u3bPEHAC7lsEWAABgx+ju07v7Pye5UZJnJPn6Ctqem+Tvkzw4yaHd/YzuXkVfAAB2oe4+J8nLNrl8K08dBABgF+vukzd2zr5pkj9NctoK2p6Z5KVJ7tXdt+ru/9Xdp6+gLwAAu0x3fzXJcZtYen6SY5ccB2BXqu6eOwMAAMAkqmq/JPdOcmSSH0ty/SUd+rNJXp/kDUne0t1nLOm4AAAAAABrr6oOzOKa65FJfjTJNZZ06I/nO9de37Ex2A0AAADscAZbAACAXaOqDk1y1yS3TXLYxtd1kxy88bV/Fk8BPP1iX6cm+XSS4y/66u6TVxwdAAAAAGBtVdUtkhye5Db5zrXXa2dx3fWgJPslOSOLa67f3vjPk5N8Kt997fWbKw8PAAAAzM5gCwAAAAAAAAAAAAAAALPYZ+4AAAAAAAAAAAAAAAAA7E4GWwAAAAAAAAAAAAAAAJiFwRYAAAAAAAAAAAAAAABmYbAFAAAAAAAAAAAAAACAWRhsAQAAAAAAAAAAAAAAYBYGWwAAAAAAAAAAAAAAAJiFwRYAAAAAAAAAAAAAAABmYbAFAAAAAAAAAAAAAACAWRhsAQAAAAAAAAAAAAAAYBYGWwAAAAAAAAAAAAAAAJiFwRYAAAAAAAAAAAAAAABmYbAFAAAAAAAAAAAAAACAWRhsAQAAAAAAAAAAAAAAYBYGWwAAAAAAAAAAAAAAAJiFwRYAAAAAAAAAAAAAAABmYbAFAAAAAAAAAAAAAACAWRhsAQAAAAAAAAAAAAAAYBYGWwAAAAAAAAAAAAAAAJiFwRYAAAAAAAAAAAAAAABmYbAFAAAAAAAAAAAAAACAWRhsAQAAAAAAAAAAAAAAYBYGWwAAAAAAAAAAAAAAAJiFwRYAAAAAAAAAAAAAAABmYbAFAAAAAAAAAAAAAACAWRhsAQAAAAAAANZCVZ1YVT3g68QJMwzp31X1tqkybGdVtWfEa3jo3HkBAAAAgPkZbAEAAAAAAAAAAAAAAGAWBlsAAAAAAAAAAAAAAACYhcEWAAAAAAAAAAAAAAAAZmGwBQAAAAAAAAAAAAAAgFkYbAEAAAAAAAAAAAAAAGAWBlsAAAAAAAAAAAAAAACYxX5zBwAAAAAAAADgO6rqxCQ3HlLb3TVtGqyZbXYAACAASURBVAAAAACAadmxBQAAAAAAAAAAAAAAgFkYbAEAAAAAAAAAAAAAAGAWBlsAAAAAAAAAAAAAAACYhcEWAAAAAAAAAAAAAAAAZmGwBQAAAAAAAAAAAAAAgFkYbAEAAAAAAAAAAAAAAGAW+80dAAAAAAAAAGBddHfNnWE76+6fSfIzM8cAAAAAALYRO7YAAAAAAAAAAAAAAAAwC4MtAAAAAAAAAAAAAAAAzMJgCwAAAAAAAAAAAAAAALMw2AIAAAAAAAAAAAAAAMAsDLYAAAAAAAAAAAAAAAAwC4MtAAAAAAAAAAAAAAAAzMJgCwAAAAAAAAAAAAAAALMw2AIAAAAAAAAAAAAAAMAs9ps7AAAAAAAAALB9VNX+SQ5Jsm+S07v7rJkjAQAAAACwjRlsAQAAAAAAdpyqumKSH0xypySHJTk0yY2TXCPJFZMctPGf5yc5J8m3k3wjydeTnJjks0mOT/Lh7v78atNvTVVdNcldk9wxyU02vm6Y5EpJDs7iez8vyRkbX99M8rmNr08leVeS47u7Vx5+TVTVoUnunuQHNr4OS3Llja+DsnjPnJnFa3diks8n+WAWr90nd8prV1VXSHK3JPfJ4nW4VRb/lg64RN35Sb6V5F+SfDLJJ5K8tbv/eZV5YZmqar8kd0hylyQ3y+JceliSq+Y759J9851z6elJvpjFufSzST6Q5L3dfebKw6+JqjooyRFJbp/FOeSWSa6exbn0kCSdxWv37SRfyuJcenwW59L3dfcZq08NAAAAwBxqh1xXBwAAAAAAdrmqunOShyW5X5LbZXkP+Do1yXFJ3pjkjd39lSUdd2mq6nZJHpnkAVncPFxbPOQ3k7wtyV8nec1uuDG7qg5L8vgkD8ni/bNZX83idTumuz+0jGyrVlV3S/LzSR6Uxc3nm/WVJK9J8tzu/vDA3idmMYS2N1/o7kM3H229jXgd0t1b/ffOhqq6epKf3Pi6axYDLFtxXpIPJXl1kpd294lbPN7aq6oDkzwiycOT3DfJgZs81DlJXp/kpUle0d3nLSchAAAAAOvIYAsAAAAAALBtVdV1kzw1yVFJvm9FbT+Z5OVJXtDdX1xRz+9RVftn8X3/cpLbTNjq21ncWPyH3f2ZCfsMUlV7kjxuYPm9uvttezne7ZP8RpIjs9h9YZnemOS3u/vdSz7uJKrqfkn+Rxa7/Szbm5L8/oC/jxMz82BLVQ39APXt3X3EJnu8Lck9N7N2hfb67+fSjPw3etg6DHtU1Q8n+S9JHpjkChO16STvTPKsJH87985OVXVEkrcOLH9hd//MXo53lSS/kOQ/JrnOlsJ9ry8l+Z9J/qK7z1/ysQEAAABYA/vMHQAAAAAAAGCsqvr+jZunv5DkaVndUEuS3DrJbyX5fFX9Q1U9rKqmuhH6e1TVPlX1lCSfTfK8TDvUkiRXSvLEJCdU1bFVdejE/Vaiqg6pqmdnsZvCI7P8oZZksXvQO6vquRs3fa+lqjq0qv4+yRsyzVBLkvxokrdW1Z6qutpEPWCUqvqhqnpjkvcm+YlMN9SSLHbS+pEkr0rykap66IS9VqqqjkzyqSS/l+UPtSSLn/HPTvLBjSEkAAAAAHYYgy0AAAAAAMC2sTGM8D+SfCKLHQH2nzHOPkn+fZJXZLHLxeSq6rZJ3p3kz5PccBU9L2bfJI9K8vGq+pWqmmIQZCWq6l5Z7Lzz1Ez/eVkleVKSD1TVLSfuNVpVPSzJPyd5wIpaPi7JJ6vq7ivqB9+jqg6uqj9J8p4shq5W7bZJXlVVr6qqG8zQfymq6upV9XdJXpZpBlou6XZZDAs+eQW9AAAAAFghgy0AAAAAAMC2UFX3TnJCkt/IvAMtl2byIY+q+qUsdheZ+2n1Byd5VpJ3VNX1Zs4yWlU9Kckbs/rBoO9P8p6qOnzFfS/TxpDYK5JcdcWtr5vkTVX1kyvuCxcNCH40yX/KCs7de/HQLAa9HjxzjtGq6hZZDAY9aMWt90vyf6rqD1fcFwAAAIAJGWwBAAAAAADWWlXtW1W/k+RNSa4/d55Vq6oDquqvkvxpFjf0rovDs9iFZO5Bm8E2boR+buZ7Ha+S5HVVdfuZ+idJqmqfqnpeFkNiczkgycuq6mdnzMAus7FD0buT3GTuLBdz5SSvrqrfnDvIUFV1tyyGWm42Y4xfr6qnz9gfAAAAgCUy2AIAAAAAAKytqjowySuTPD278HONje//75L8zMxRLsv1k7ytqu41d5C9qapnJPn1uXNksTvKa6rqajNmeH6SJ87Y/yL7JHluVd1n7iDsfFX1hCR/k8WuU+umkjyzqv587iB7U1V3TPLarH6np0vzO3Z+AgAAANgZdt0HQAAAAAAAwPZQVVdK8rokD547yxyqav8kr0hyv7mz7MUVsxjUuPvcQS5LVf1ykv8+d46L+b4kL5ijcVX9VpLHz9H7MuyX5G+q6pZzB2HnqqqjkvzfLAZI1tlTqurP5g5xWarq5knekMXuU+vieVV147lDAAAAALA167RdPQAAAAAAQJJ/26nk9UnutoTDnZTkXUk+lOTzSU5McnqSM5JcmMVgxsFJrpfFDiS3SPIDSe6U5BpL6L9Zf5nkx7d4jM8leWOSDyf5VJJvZPG975/kkCQ3TnKrJHdPcs8kB26yz8FJXltVd+nu47eYeak2dpN51sDyC7N4n7wzycezeP1OyXfeKwcnuUGSmyW5a5IfTXKtTUZ7aFU9tLtfvcn1o1XVkUl+ewuHOD/Ju7O4sf3DSU5I8s0s3lMHZPGeOizJrbN4P90/ybUHHPeqSY6uqsO3kA0uVVXdL4tBsq089PH0JG/J4mfJCUm+vPG/nZ/F+/5aWZxL75TF+/76W+j1i1X19e7+3S0cY+mq6qAsdlAbes77cpJ3JHl/FufSLyX5dpKzs/i5e/UkN0nyg0nuleQOm4x21ST/X5KHbnI9AAAAAGvAYAsAAAAAALBWqqqS/FW2NtTy5SQvSvKS7v7oFnLcOskRWewac0QWAyGTq6pfTPKYTS4/J8nRSf68uz+8l9oPXqznQUkeneQ/ZjHYM9YhSV5ZVT/c3advYv0Urp3FDc97u6H9M0n+LMnLu/ukvdR+IothoedU1X5JHpjkN7O4OXusP66q13X3uZtYO0pV3SjJcze5/LQsXp+/6O6vXEbN+VkMAJ2UxfDLX1bVvlncbP6rSfY2tHLnJL+yyXzbTncfcXl/XlUnZjF4NuRY674LyWw2dvJ4cZJ9N3mIdyZ5dpJXDfh3+uaL9f2RJE9N8lPZ3EDN71TV+7v7DZtYO5X/neQ2e6k5M4uf30d39/sGHPPdSY5Nko1dm34tyVEZfx/DQ6rqvt193Mh1AAAAAKyJrTyVBgAAAAAAYAq/neQRm1x7YpInJrlJd//XzQ61JEkvfKK7n9Pd98/iKfVPyuJG58lU1Q9n+A4jl/SqJLfq7icNGGr5Lt19Znc/L8ntkzw5i504xrplkudvYt1U/jTJdS/nz0/O4ibqW3T3swcMtXyX7j5/Y8eVO2cxEHTOyHw3zeYHmAarqn2yGHa66iaWvyjJzbv7v1/OUMul6u4LuvsV3X3XLL7PU/ey5Hey2MUBtmxj8OwV2dzOWycmeVh3/0h3v2zs8Fl3/1N3PyKLgbd3baL/PkleXFU33MTaKdwvyeMv588vTPJ/khza3U8dONTyXbr7hO5+QpK7JPnkJjI+fRNrAAAAAFgTBlsAAAAAAIC1UVV3y2L3i7EuSPLHSW7T3X/Z3ectN1nS3ad19/O6+0eyGP44OslSd9rYuBH7eUmuMHLp2Ume3N0P6+7PbyVDd1/Y3c9Ncsck793EIY6sqoduJcMSXe9y/uxVSW7Z3cd094VbabIxBPXsJD+axe4mY/zyVnoP9LNJ7jlyzTlJntDdj+3uk7caoLuPTXKnXP576opZ7PwDy/Cr2dxOSq9OcofuftVWA2wMGN4jye8n6ZHLr57FLinr4PLOpV9Jcvfu/vnuPmWrjbr7Q0numuRtI5fevao28/cNAAAAwBow2AIAAAAAAKyFqjo4yQsz/vOL/5fkx7r717r7zOUn+17d/dHuflySmyX5yyTLGqT5lSS3G7nmjCQ/vjGMsjTd/cUkRyT5h00sf3ZVXWmZeZbsmRtDQP+6zIN29zuSPCzJ+SOW3baqDl9mjourqkOS/O7IZWcleXB3v2CZWbr7S0nuneQtyzwuXFJVHZrN7eDxnCx2avnWsrJs7Fz0tCRPyGJnkzEeskaDgpfmg0nu1N2b2ZXmMm28/g9O8pGRS5+0zBwAAAAArI7BFgAAAAAAYF38TpKbjlzztST/rrvfNEGeveruL3b3E5M8bavHqqprZvyN2OcmeUB3v3Wr/S9Nd5+d5KFJjhu59IZJfmP5iZbit7p7Mze8D9Ldb874QZKfmiLLht9Icp0R9Rcm+enufuMUYTaGzx6Y5ANTHB82/GGSg0aueW53P7W7x+6sMkh3/1WSn9vE0j/Z2M1r3XwoyX27++tTHLy7T0/yiCwG7YZ6WFXtO0UeAAAAAKZlsAUAAAAAAJhdVX1fkqeOXHZKknt396cniDRKd5+7hMP8SpKDR655Sne/fQm9L9PG93Zkkn8ZufQXq+oqE0TaimO6+xkr6PP7ST43ov7hU4TY2DXnF0Yue3p3v2aKPBfp7rOS/ESSk6fsw+5UVbdI8pMjl70l438GjbaxC9KzRi47LMljJoizFSdlsavTUne9uqTuPiHjXq9rJrnnRHEAAAAAmJDBFgAAAAAAYB08I8kBI+ovSHLkxk2v215VXTXjBxBevHGT9OS6+/8leWSS80csu0qSX5wm0aZ8KsmTVtGou89L8swRS25UVWN3KxriCUmuOqL+PUn+YIIc36O7v5zk51fRi13naRn3Ofg3kzy6u8ec37biNzJ+x6L/WlXr8tl+Z/F6fWVF/f4oyekj6u81VRAAAAAAprMuF78AAAAAAIBdamO3lseOXPb07n7bBHHmclSSK4+oPyXJf5woy6Xq7g8m+eORy36hqvadIs8mPLG7z15hv5dmccP8UD8yQYYxg0UXZPEaXThBjkvV3a9M8upV9WPnq6prJnnEyGW/1N0nTZHn0nT3BUken+S8EctunuTfT5NotBd091tW1ay7T0tyzIglU5xLAQAAAJiYwRYAAAAAAGBuP5dkzPDDx5P8z4myzOVxI+uf2d3fmCTJ5fu9JF8fUX/dJPebKMsYf9fd/7TKhhtDNK8aseQuy+xfVf8uyZhdYI7p7k8sM8NA/y3JyoZp2PEemeQKI+o/mOTYibJcpu7+eJLnj1w29ufEFM5O8t9n6PuSEbV3rqqaLAkAAAAAkzDYAgAAAAAAzKaq9kvyhJHLntrd50+RZw5VdZskdxqx5ItJnjtRnMvV3d9O8vsjl63DzdjPnKnva0bU3mrJvR85ovbCzPQadffxWexuA8tw1Mj6p3V3T5Jk756R5KwR9Q+pqqtOFWag53f312bo+64kQ4c5D05yowmzAAAAADABgy0AAAAAAMCc7p3k+iPq39Hdb58qzEwePrL+z7v73EmSDPOXSU4fUf+gqtp/qjADfKi7PzBT73eNqF32YMuY99Xru/tzS+4/xp/P2JsdoqpulOSHRiw5vrvfMFWevenuk5K8bMSSA5I8YKI4Qz1vjqbdfWGS945YsuzzKQAAAAATM9gCAAAAAADM6UEj6/9wkhTz+tERtedmMVgym41dW44ZseSgJIdPFGeIY+dq3N2nJPnCwPLrVNVBy+hbVbdMcoMRS56/jL6b1d3vTPLJOTOwI4w5lybJX0ySYpyxQ133nSTFMB/r7o/O2P/9I2pvMlkKAAAAACZhsAUAAAAAAJjTmKfPn5Tk9VMFmUNVXSnJXUYseUt3nzpVnhFeMrJ+7A3ny/QPM/ZOkk+PqL3Oknrea0TtmVmPf1evnDsA296YoY9O8vKpggwO0f3+JJ8ZsWTOwZbdeC4FAAAAYEUMtgAAAAAAALOoqpslOWzEkpd09wVT5ZnJXZNcYUT9q6YKMtK7shg0GuqeUwXZi5O6+/iZel/kcyNqr72knkeMqD2uu89aUt+t+Nu5A7DtjTnPvKe7vzZZknHGnNdvWFU3nSzJ5XvrTH0vMse5FAAAAIAVMdgCAAAAAADM5c4j6187SYp53X5k/ZsmSTFSd1+Y5LgRS25fVTVVnsvxzzP0vKRTRtRefUk97zii9m1L6rlVH0py2twh2J6q6ppJrjdiyVqcSze8YWT9HSZJsXdzn0/nOJcCAAAAsCIGWwAAAAAAgLn84Ijas5O8c6ogM7rdiNqvdffnJ0sy3rtG1B6S5NCJclyeT8zQ85K+MaL2gK02q6oDk9xkxJJ3b7XnMmwMS71/7hxsW2OHBNfp58l7k4zZjWzMz41lObW7T56h78Wt9FwKAAAAwGoZbAEAAAAAAOZypxG1H+jusydLMp/bjqh932QpNuc9I+vHfK/L8uUZel7SmPftgUvod6sk+w6svTDJh5fQc1k+MHcAtq2x55e1OZ9297czbgjPuXTvlnEuBQAAAGCFDLYAAAAAAABzufmI2o9NlmJeh42oPX6yFJtzQpIeUT/me12Wr83Q85LOGVG7/xL63XRE7RfXbGDs03MHYNsac345qbv/dbIkmzPm/O5cunfLOJcCAAAAsEIGWwAAAAAAgJWrqv2SXGfEko9PlWUuVXVwkiuPWHLCVFk2o7vPSvKFEUuuP1WWy3HGDD0vaczwzzI+u7veiNp1GyT51NwB2LbGnF/W6ly6Ycxgy648l3b3qs+lAAAAAKyQCzoAAAAAAMAcrp9k3xH1J06UY05jb07+0iQptuaLI2rnuBl7nXYjWZUxgy1fmSzF5qxbHraPMeeX7X4uvVZVXWGyJJduN55LAQAAAFghgy0AAAAAAMAcbjCy/muTpJjXmB1rkuTrk6TYmjGZrjtZist2wQw95zbmdT5lshSbs47vcbaHMefTdXyfjclUSa49VZDLsBvPpQAAAACskMEWAAAAAABgDlcaWX/yJCnmNfY1WLchhGTczdgHT5aCixvzvjp1shSb0N1nJjlr7hxsS2Pe99v9XJo4nwIAAACwwxhsAQAAAAAA5nDFkfVnTJJiXgeOrD9zkhRbMybT2L9zNueAEbXrOESyjplYf2POp9v9XJo4nwIAAACwwxhsAQAAAAAA5jD2ptyzJ0kxr7GDLedMkmJrxmQa+/2yOWNe53V8T507dwC2pe3+vh+byfkUAAAAgB3FYAsAAAAAADCHMbtKJDvzZvf9R9afN0mKrRnz9zL2+2VzrjCi9vzJUmzeOr7PWX9jzi/r+B4b+zPO+RQAAACAHcVgCwAAAAAAMIexT6ffiTfxjr2ReczAwqqMybQTh5PW0ZjXebu/p+Aiu+1973wKAAAAwI5isAUAAAAAAJjD2SPrD5wkxbzGvgZjd7lZhTF/L2O/XzZnzNDYOr6n1jET62/M+WUd32Njf8Y5nwIAAACwoxhsAQAAAAAA5nDWyPqDJ0kxr7E3Jh80SYqtGZNp7N85mzPmfbXd31Nwkd32vnc+BQAAAGBHMdgCAAAAAADM4fSR9deZJMW8vj2y/lqTpNiaa4+oPWOyFFzcaSNqrzlZik2oqkOynrtpsP7GnE+3+7k0cT4FAAAAYIcx2AIAAAAAAMzhKyPrrzdJinmdPLJ+7I3PqzAm00mTpeDixrzO6/aeWrc8bB9jzqfr+D4bk6mTfH2qIAAAAAAwB4MtAAAAAADAHL6a5IIR9TeeKsiMxg73fN8kKbZmTKavTpaCi/vaiNobTpZic9YtD9vHmPPLdj+XntLd502WBAAAAABmYLAFAAAAAABYue4+P+N2lviBqbLMpbvPTHLaiCW3mCrLZlTVgRk3cGSwZTXGDLbcfLIUm7NW73G2lTHnl3V8n91yRK1zKQAAAAA7jsEWAAAAAABgLp8aUXu7yVLM63Mjasfc+LwKt8i4z5rGfK9s3r+MqL1BVR08WZLx1nHggO1hzPnlelV1lcmSbM6tRtQ6lwIAAACw4xhsAQAAAAAA5vLBEbU/tLFDyE7zsRG1PzxZis25y8j6Md8rm/epJOcNrK0kPzRhlrHuPHcAtq2x55e1ea9V1UEZtyuZcykAAAAAO47BFgAAAAAAYC4fGlF7YJK7ThVkRh8dUXuDqrrxZEnGu9uI2m9194lTBeE7uvu8jNu15fCpsoxRVftlvYZs2F7GnEuTceevqd0lyX4j6j8yVRAAAAAAmIvBFgAAAAAAYC7vHVn/gElSzOvDI+vvO0mKkaqqktxnxBI3Yq/WmN2Q7j1ZinEOT3LFuUOskZ47wHbS3acm+cqIJWtxLt3woyPrx/7cAAAAAIC1Z7AFAAAAAACYRXd/PsmnRyx5ZFXttM823p3k3BH1D50qyEh3SXKDEfVvnyoIl+ptI2rvWVVXnirICA+ZO8CaOW9o4cZuN4w7z9y1qq41WZJxHjai9ksbPzsBAAAAYEfZaR/+AAAAAAAA28trR9ReL8n9pwoyh+4+I4vhlqHuW1VXmyrPCD89sv5Nk6Tgsrx1RO3+SR40VZAhNnYAevicGdbQOSNqD5gsxfYy5jyzT5KfnCrIUFV1+yS3GLHEuRQAAACAHclgCwAAAAAAMKfXjKz/9UlSzGvMjcoHJnn8VEGGqKqDkvzMiCXfTvKeadJwaTZ2dPjsiCVPmirLQPdLcujMGdbNWSNqrzJZiu3luJH1T54kxTg/P7J+7PcIAAAAANuCwRYAAAAAAGBOb09y4oj6I6rq7hNlmcsrRtb/fFXtN0mSYR6X5Koj6v+uu8+bKgyX6eUjau9RVbedLMnePXXG3uvq1BG1154sxTbS3V9O8t4RS25XVUdMFGevqupaSR49YslZGbfLGQAAAABsGwZbAAAAAACA2XT3hUmeP3LZs6tq3ynyzKG7T0jy/hFLbppxO6YszcZuLb85ctkLp8jCXr10ZP1vTxFib6rqzkkeOEfvNXfKiNrvmyzF9nP0yPrfnSTFME9LcvCI+ld392lThQEAAACAORlsAQAAAAAA5vaCJGN29Lh9kl+dKMtcxg5//HZVXXmSJJfv15Ncf0T9V5McN1EWLkd3fyTJx0cs+YmqOnyqPJfjD2fouR18eUTtD0yWYvt5aZJzR9TfraoePlWYy1JVt0jylJHLDAkCAAAAsGMZbAEAAAAAAGbV3V/L+F1bfq+q7j5Fnpkck+RfR9TfIMmfTJTlUlXV7ZP8t5HL/vfGrjzM409H1FaS51fV/lOF+Z6GVU9Mcq9V9dtmPj2ido6BpLXU3d9McuzIZc+pqmtMkefSVNU+Sf4qyZh/ayckedM0iQAAAABgfgZbAAAAAACAdfCMJGeOqN8vycur6uYT5Vmp7j4tybNHLntCVR05RZ5L2tgd5iVJrjBi2f9L8pxpEjHQi5KcPKL+1kn+aKIs36WqbpnkWavotU2dMKL23lV18GRJtp8/SHLBiPrrJHnhxsDJKjwz44eRfs+QIMD/3969x2xf13UAf38QNI4p2WqBYlggoHKwRsBKlBmFYOJha9ABFVwDw6F2YGi6ECqXU+lgRexJJlhNCxAV4jDYgKEycAYySg6CsGcFBvI8JMdPf/xuihb2cJ3u3309vF7b77/7+/2+r3vX73dt9/19X18AAAA2Z4otAAAAAADA6Lp7fZKPTTjsR5JcXlU/sYBIE5nTKRcfT/LghGPWVdVPz2Ht76uqtkryt0n2mHDoJ1YKO4ykux/O5OWRE6vqbYvI86Sq2jHJ+Ul2WOQ6S+5rSR5+hj+7bZJ3LDDLUunuf83wzJrE65P80QLi/C9V9SuZ/OSrWzMUCwEAAABgs6XYAgAAAAAArBUfzmSnFCTJTkmurarXLiDPJlXVi6vqzCSnzTpXd38nyQcnHLZNkn+qqv1nXf/prBR2PpvkFycc+q0kfzz/REzhjCS3TzjmzKo6ehFhquqFSS5LslmctrQoK6Wkr04w5NSqeuWi8iyhk5NsmHDM+6rq9EWESZKVe+pvphj67u6e5AQaAAAAAFg6ii0AAAAAAMCa0N3fS3JMkkk38P5Qkour6g+qauu5B3saVbV3VX0qyTeTHJtkqzlNfUaGkxom8fwkl827iFBVOye5PMkbphj+ru7eOM88TGelIPHbEw57TpKzq+r9VVXzylJVr0hydZJ95jXnZu7CCX52hyRXVdV7qmq7RQVaFt19V5IPTTH05Kr6dFVtO68sVbVFVX0oydkZ7q1JfK67vzCvLAAAAACwVim2AAAAAAAAa0Z3fzmTn1qSJFsm+d0kN1bVMVU1r6LJf6uqH6yq46rq6gzlk1/L/AotSZKVb+U/LskjEw7dNsmnq+qcqtpplgwrm7DfnuSGJAdNMcVnunuSDfksWHd/Nsn5Ew7bIsmpSS6pqpfNsn5VPbeqfivJtfn/T2p5IMn9s6y1mfn7CX9++yQfTbK+qi6oqpOr6k1VtX9V7VZVu1TVzhNcz1vAa1pNn0jylSnGHZ3k+qr6hVkDrJyic0WGz7VJ/zd/b5ITZ80AAAAAAMtAsQUAAAAAAFhTuvu0JOdMOXzXJOuS3FpVH66ql0+bowZ7VNXxVXVRkn9L8ldJDpx2zmeiu69LctKUw49K8i9V9adVteckA6tq66cUWs5K8sIp1v9GkndOMY7FOzbJ+inGHZLk61W1rqr2m2RgVe1QVb+Z4X3xkSTbbGLIezOUW0jS3bcn+eIUQ7dNckSS05N8LkOh6JYkdyS5a4LrgJlewMi6+7Ekb81QEJnUbkm+VFWXV9WRVbXlJIOr6sCqOjfJ9Ul+dor1n0hyVHffM8VYAAAAAFg6E/0BDgAAAAAAYJW8I8mLM92G4CR5UZJTkpxSVfckuSZDYeO2JN9K8mCSjRk2D/9Aku2S/GiSnZLsnmSvJK/KdOWOmXX3n1fV/hlOhZnUNklOSHJCVd2S5JIkX8+wsf2+JBsynDSzfZJdtk5zWQAABuhJREFUkuyR4fd8cJKtZ4j93SRv6u4NM8zBgnT3vVX1q0kuSvKcCYdvleSYJMdU1a1JLs5watFT31PPTbJDkpck2TPJqzO8r577DNe4tLvPqqoPTJhtc3daksPGDrGsuvvOqjoqyZcy+fs+SV6zct1fVZdlKAndnOTuDJ8jj2f4/PjhDM/S/ZIcmmTnGaOf0t2XzDgHAAAAACwNxRYAAAAAAGDN6e6Hq+qwJJ/PULiYxY8lecvKtUyOTbJjksNnmGP3lWvRNiQ5rLtvWYW1mFJ3X1pVJyT5ixmmeWmS4+cU6Un3JHnbnOfcLHT3NVW1Ln4/U+vuS6rq15OcnWSLKad5fpI3r1yL9vHu/sNVWAcAAAAA1oxp/3AHAAAAAACwUCsnfxyW4Zv2n3W6+9EMZZyLx86yCQ8lOby7rx47CJvW3X+ZZC1tmt+Y5Iju/vbYQdawk5LcOHaIZdbd52QoC/bYWTbhz7r7pLFDAAAAAMBqU2wBAAAAAADWrO7+zyRHJPlI1v6G5Lnr7oeTvCHJurGzfB93J3l1d185dhCeue4+OcmpY+dI8nCSX+7u68cOspZ19wMZSn43j51lmXX3ugwnrmwYO8vTeCLJ+7v7XWMHAQAAAIAxKLYAAAAAAABrWnc/3t2/k+SXktw3dp7V1t2PdPfbk7w7yaNj53mKa5L8VHdfN3YQJtfdv5fkxCSPjxTh/iSHdveFI62/VLr7riQ/k+TcsbMss+7+xyQHJLl17CxP8UCSN3b3aWMHAQAAAICxKLYAAAAAAABLobs/n2T3JGdm+Hb7teTBRS/Q3WckeVWSryx6rU14KMn7kvxcd68fOQsz6O4/SXJwkrtWeembkxzkpJ/JdPd3u/voJK9JcvnYeZZVd9+YZO8kH8t4xa4nnZdkr5XPNwAAAAB41lJsAQAAAAAAlkZ339fd78xwcsEXkvSIcR5Lcn6SQ7r7A6uxYHf/c4bTBo5P8u3VWPMpHk/ymQybsD/a3WNvCGcOuvuqJPtkdQpjjyU5Pcm+3f2NBa+12eruK7r7kCQvT/L7Sb6WtVf2W9O6e2N3vyfDZ8mlI0S4McmR3X1kd989wvoAAAAAsKYotgAAAAAAAEunu7/a3Ydn2Nh9VpIHVmvpJF9O8t4kO3f3G7t7VU9O6O4nuvuTSV6a5LgMG6QXaUOSv07ysu4+qrvvWPB6rLLu/s5KYWzfJBdm/iWJR5N8Kskru/uU7n54zvM/K3X3Td39we7eN8mOSX4+w7Ppk0kuSnJ9kjszPB+/F+WX/6O7r+vu1yXZP8k/ZHivLtJVSY7McC+ct+C1AAAAAGBpVPeYX2QGAAAAAAAwu6p6XpJDk7wlycFJXjTH6e9McmWSK5J8sbvXz3HuuaiqvZMcleT1SfZMUjNO+R8ZXvPfJbmgux+acT6WSFXtmuQ3krw5ya5TTtNJrktyQZJ1TqVgGVTVjknemuGz5MAk28w45WNJbkhyXpJzFQMBAAAA4OkptgAAAAAAAJudqtopyQFJ9kry4yvXTkm2y7BReesMJ9s/kuEkg/uT3JtkfZI7ktyW5KYkN3T3v69y/JlU1QuSHJRknwynuuyaZOf8z2vfJsOpBA8l2ZjkviS3Z3jNtyS5JslN7Z9IJKmq3ZK8NskrkuyRZJckOyTZPsM9tCHJgxnuoW9muG9uSnLlWiyBwTNVVVsm2S/DaS4/meFZ+pIkL8jwHN02wz3w5LP0wQxFyNuS3Jqh2HVtd29c7ewAAAAAsGwUWwAAAAAAAAAAAAAAABjFFmMHAAAAAAAAAAAAAAAA4NlJsQUAAAAAAAAAAAAAAIBRKLYAAAAAAAAAAAAAAAAwCsUWAAAAAAAAAAAAAAAARqHYAgAAAAAAAAAAAAAAwCgUWwAAAAAAAAAAAAAAABiFYgsAAAAAAAAAAAAAAACjUGwBAAAAAAAAAAAAAABgFIotAAAAAAAAAAAAAAAAjEKxBQAAAAAAAAAAAAAAgFEotgAAAAAAAAAAAAAAADAKxRYAAAAAAAAAAAAAAABGodgCAAAAAAAAAAAAAADAKBRbAAAAAAAAAAAAAAAAGIViCwAAAAAAAAAAAAAAAKNQbAEAAAAAAAAAAAAAAGAUii0AAAAAAAAAAAAAAACMQrEFAAAAAAAAAAAAAACAUSi2AAAAAAAAAAAAAAAAMArFFgAAAAAAAAAAAAAAAEah2AIAAAAAAAAAAAAAAMAoFFsAAAAAAAAAAAAAAAAYhWILAAAAAAAAAAAAAAAAo1BsAQAAAAAAAAAAAAAAYBSKLQAAAAAAAAAAAAAAAIxCsQUAAAAAAAAAAAAAAIBRKLYAAAAAAAAAAAAAAAAwCsUWAAAAAAAAAAAAAAAARvFfn72+i822FicAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 3600x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(50,30))\n",
    "sns.barplot(x=\"condition\",y=\"cpp\", data=all_obs_data, ci=95, n_boot=1000,units=\"ID\")\n",
    "plt.ylabel('$\\Omega$')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([111, 112])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.unique(all_obs_data.id_choice)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_obs_data.loc[all_obs_data.id_choice == 111, 'id_choice'] = 0\n",
    "all_obs_data.loc[all_obs_data.id_choice == 112, 'id_choice'] = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_obs_data.loc[all_obs_data.p_id_solution == 111, 'p_id_solution'] = 0\n",
    "all_obs_data.loc[all_obs_data.p_id_solution == 112, 'p_id_solution'] = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_obs_data_sample_lc = all_obs_data[(all_obs_data.condition == 'lc') & (all_obs_data.ID == 761)] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f7eaa862240>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3600x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#use a low conflict sample to test direction\n",
    "plt.figure(figsize=(50,30))\n",
    "plt.plot(all_obs_data_sample_lc.target_B, 'r', label='$B_{A} - B_{B}$')\n",
    "plt.plot(all_obs_data_sample_lc.id_choice, 'k--', label='id_choice')\n",
    "plt.plot(all_obs_data_sample_lc.p_id_solution, 'g--', label='correct_choice')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f7eaa83cd68>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3600x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(50,30))\n",
    "plt.plot(all_obs_data_sample_lc.cpp[0:600], 'k', label='cpp')\n",
    "plt.plot(all_obs_data_sample_lc.cp[0:600], 'r--', alpha=0.5, label='true cp')\n",
    "plt.ylabel('$\\Omega$')\n",
    "plt.legend(frameon=1,loc='upper left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "#use target choice as response \n",
    "#include correct target choice as stimulus \n",
    "all_obs_data = all_obs_data.rename(index=str, columns={\"p_id_accuracy\": \"response\", \n",
    "                                                       \"p_id_solution\": \"stimulus\",\n",
    "                                                        \"ID\": \"subj_idx\"})\n",
    "all_obs_data = all_obs_data[['response', 'stimulus', 'rt', 'condition', \n",
    "                             'subj_idx', 'ideal_B', 'cpp']] \n",
    "# #use target-based belief in reward difference (b_t0 - b_t1)\n",
    "all_obs_data = all_obs_data.rename(index=str, columns={'ideal_B': 'B'})\n",
    "# all_obs_data = all_obs_data[(all_obs_data.rt<0.6)]\n",
    "# all_obs_data.reset_index(drop=True, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>response</th>\n",
       "      <th>stimulus</th>\n",
       "      <th>rt</th>\n",
       "      <th>condition</th>\n",
       "      <th>subj_idx</th>\n",
       "      <th>B</th>\n",
       "      <th>cpp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.711570</td>\n",
       "      <td>hc</td>\n",
       "      <td>761</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.099471</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.681410</td>\n",
       "      <td>hc</td>\n",
       "      <td>761</td>\n",
       "      <td>-1.241007</td>\n",
       "      <td>0.035079</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.767118</td>\n",
       "      <td>hc</td>\n",
       "      <td>761</td>\n",
       "      <td>-0.595781</td>\n",
       "      <td>0.023075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.507209</td>\n",
       "      <td>hc</td>\n",
       "      <td>761</td>\n",
       "      <td>-0.306135</td>\n",
       "      <td>0.019881</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.656259</td>\n",
       "      <td>hc</td>\n",
       "      <td>761</td>\n",
       "      <td>-0.139394</td>\n",
       "      <td>0.018539</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   response  stimulus        rt condition  subj_idx         B       cpp\n",
       "0         1         0  0.711570        hc       761  0.000000  0.099471\n",
       "1         0         0  0.681410        hc       761 -1.241007  0.035079\n",
       "2         1         0  0.767118        hc       761 -0.595781  0.023075\n",
       "3         0         0  0.507209        hc       761 -0.306135  0.019881\n",
       "4         1         0  0.656259        hc       761 -0.139394  0.018539"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_obs_data['condition'] = all_obs_data['condition'].str.strip()\n",
    "all_obs_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773,\n",
       "        774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784]),\n",
       " array(['hc', 'hv', 'lc', 'lv'], dtype=object),\n",
       " 24,\n",
       " 4)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.unique(all_obs_data.subj_idx), np.unique(all_obs_data.condition), len(np.unique(all_obs_data.subj_idx)),len(np.unique(all_obs_data.condition))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['response', 'stimulus', 'rt', 'condition', 'subj_idx', 'B', 'cpp'], dtype='object')"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#columns for sparse df used for HDDM\n",
    "all_obs_data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3600x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=plt.figure(figsize=(50,30))\n",
    "ax = fig.add_subplot(111, xlabel='RT', ylabel='count', title='RT distributions')\n",
    "for i, subj_data in all_obs_data.groupby('condition'):\n",
    "    subj_data.rt.hist(bins=20, histtype='stepfilled', ax=ax)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'B')"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3600x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(50,30))\n",
    "plt.plot(all_obs_data.B[(all_obs_data.subj_idx == 761) & (all_obs_data.condition == 'lc')], 'k')\n",
    "plt.ylabel('B')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'stimulus selected')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3600x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(50,30))\n",
    "plt.plot(all_obs_data.response[(all_obs_data.subj_idx == 761) & (all_obs_data.condition == 'lc')], 'k')\n",
    "plt.ylabel('stimulus selected')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'obs. rt')"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams['figure.figsize'] = 30, 10\n",
    "sns.set(font_scale=5)\n",
    "fig = plt.figure()\n",
    "plt.plot(all_obs_data.rt[(all_obs_data.subj_idx == 761) & (all_obs_data.condition == 'lc')], 'k')\n",
    "plt.ylabel('obs. rt')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'correct stimulus')"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams['figure.figsize'] = 30, 10\n",
    "sns.set(font_scale=5)\n",
    "plt.plot(all_obs_data.stimulus[(all_obs_data.subj_idx == 761) & (all_obs_data.condition == 'lc')], 'k')\n",
    "plt.ylabel('correct stimulus')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "# n_samples, n_burned_samples, n_thin = 500, 50, 3\n",
    "n_samples, n_burned_samples, n_thin = 1000, 50, 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['a_Intercept']\n",
      "Adding these covariates:\n",
      "['t_Intercept']\n",
      "Adding these covariates:\n",
      "['v_Intercept']\n",
      "Adding these covariates:\n",
      "['z_Intercept']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 3329.3 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7ea132ecc0>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#intercept model\n",
    "intercept_model=['a~1', 't~1', 'v~1', 'z~1'] #true intercept only; \"flat\", no predictors, but all parameters estimated (all parameters estimated in other reg. models, so only diff. is lack of predictors)\n",
    "intercept_model = hddm.HDDMRegressor(all_obs_data, intercept_model, bias=True)\n",
    "intercept_model.find_starting_values()\n",
    "intercept_model.sample(n_samples, burn=n_burned_samples,   dbname='intercept_only_obs_reg_simple_acc.db',db='pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['a_Intercept', 'a_cpp']\n",
      "Adding these covariates:\n",
      "['t_Intercept', 't_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 2722.9 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7ea141ef98>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a_cpp_t_B_obs_reg = hddm.HDDMRegressor(all_obs_data,['a~cpp','t~B'], bias=True)\n",
    "a_cpp_t_B_obs_reg.find_starting_values()\n",
    "a_cpp_t_B_obs_reg.sample(n_samples,burn=n_burned_samples,   dbname='a_cpp_t_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['a_Intercept', 'a_cpp']\n",
      "Adding these covariates:\n",
      "['v_Intercept', 'v_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 2445.0 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7ea0c76978>"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a_cpp_v_B_obs_reg = hddm.HDDMRegressor(all_obs_data,['a~cpp', 'v~B'],bias=True)\n",
    "a_cpp_v_B_obs_reg.find_starting_values()\n",
    "a_cpp_v_B_obs_reg.sample(n_samples,burn=n_burned_samples,   dbname='a_cpp_v_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['t_Intercept', 't_cpp']\n",
      "Adding these covariates:\n",
      "['a_Intercept', 'a_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 2939.2 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7ea0c18c50>"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t_cpp_a_B_obs_reg = hddm.HDDMRegressor(all_obs_data,[ 't~cpp', 'a~B'],bias=True)\n",
    "t_cpp_a_B_obs_reg.find_starting_values()\n",
    "t_cpp_a_B_obs_reg.sample(n_samples,burn=n_burned_samples,   dbname='t_cpp_a_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['t_Intercept', 't_cpp']\n",
      "Adding these covariates:\n",
      "['v_Intercept', 'v_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 3081.3 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7ea0ace0b8>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t_cpp_v_B_obs_reg = hddm.HDDMRegressor(all_obs_data,[ 't~cpp', 'v~B'],bias=True)\n",
    "t_cpp_v_B_obs_reg.find_starting_values()\n",
    "t_cpp_v_B_obs_reg.sample(n_samples,burn=n_burned_samples,   dbname='t_cpp_v_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['v_Intercept', 'v_cpp']\n",
      "Adding these covariates:\n",
      "['a_Intercept', 'a_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 2640.2 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7ea07be7f0>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "v_cpp_a_B_obs_reg = hddm.HDDMRegressor(all_obs_data,[ 'v~cpp', 'a~B'],bias=True)\n",
    "v_cpp_a_B_obs_reg.find_starting_values()\n",
    "v_cpp_a_B_obs_reg.sample(n_samples,burn=n_burned_samples,   dbname='v_cpp_a_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['v_Intercept', 'v_cpp']\n",
      "Adding these covariates:\n",
      "['t_Intercept', 't_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 3150.7 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7ea01a4748>"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "v_cpp_t_B_obs_reg = hddm.HDDMRegressor(all_obs_data,[ 'v~cpp', 't~B'],bias=True)\n",
    "v_cpp_t_B_obs_reg.find_starting_values()\n",
    "v_cpp_t_B_obs_reg.sample(n_samples,burn=n_burned_samples, dbname='v_cpp_t_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# All $z$ models "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['z_Intercept', 'z_cpp']\n",
      "Adding these covariates:\n",
      "['a_Intercept', 'a_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 2766.6 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7ea16865f8>"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "z_cpp_a_B_obs_reg = hddm.HDDMRegressor(all_obs_data,['z~cpp','a~B'],bias=True)\n",
    "z_cpp_a_B_obs_reg.find_starting_values()\n",
    "z_cpp_a_B_obs_reg.sample(n_samples,burn=n_burned_samples,  dbname='z_cpp_a_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['z_Intercept', 'z_cpp']\n",
      "Adding these covariates:\n",
      "['t_Intercept', 't_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 3179.8 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7e9fd0c278>"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "z_cpp_t_B_obs_reg = hddm.HDDMRegressor(all_obs_data,['z~cpp','t~B'],bias=True)\n",
    "z_cpp_t_B_obs_reg.find_starting_values()\n",
    "z_cpp_t_B_obs_reg.sample(n_samples,burn=n_burned_samples,   dbname='z_cpp_t_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['z_Intercept', 'z_cpp']\n",
      "Adding these covariates:\n",
      "['v_Intercept', 'v_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 2792.0 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7e9fb3d588>"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "z_cpp_v_B_obs_reg = hddm.HDDMRegressor(all_obs_data,['z~cpp','v~B'],bias=True)\n",
    "z_cpp_v_B_obs_reg.find_starting_values()\n",
    "z_cpp_v_B_obs_reg.sample(n_samples,burn=n_burned_samples,   dbname='z_cpp_v_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['a_Intercept', 'a_cpp']\n",
      "Adding these covariates:\n",
      "['z_Intercept', 'z_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 2733.6 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7e9f81a978>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a_cpp_z_B_obs_reg = hddm.HDDMRegressor(all_obs_data,['a~cpp','z~B'],bias=True)\n",
    "a_cpp_z_B_obs_reg.find_starting_values()\n",
    "a_cpp_z_B_obs_reg.sample(n_samples,burn=n_burned_samples,   dbname='a_cpp_z_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['v_Intercept', 'v_cpp']\n",
      "Adding these covariates:\n",
      "['z_Intercept', 'z_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 3063.1 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7e9f599e10>"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "v_cpp_z_B_obs_reg = hddm.HDDMRegressor(all_obs_data,['v~cpp','z~B'],bias=True)\n",
    "v_cpp_z_B_obs_reg.find_starting_values()\n",
    "v_cpp_z_B_obs_reg.sample(n_samples,burn=n_burned_samples,   dbname='v_cpp_z_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding these covariates:\n",
      "['t_Intercept', 't_cpp']\n",
      "Adding these covariates:\n",
      "['z_Intercept', 'z_B']\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1927: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  tmp2 = (x - v) * (fx - fw)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/scipy/optimize/optimize.py:1928: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  p = (x - v) * tmp2 - (x - w) * tmp1\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/pymc/Node.py:403: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  self.__name__ = input['__name__']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " [-----------------100%-----------------] 1001 of 1000 complete in 3352.1 sec"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/numpy/core/fromnumeric.py:224: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future\n",
      "  return reshape(newshape, order=order)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<pymc.MCMC.MCMC at 0x7f7e9f7f66a0>"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t_cpp_z_B_obs_reg = hddm.HDDMRegressor(all_obs_data,['t~cpp','z~B'],bias=True)\n",
    "t_cpp_z_B_obs_reg.find_starting_values()\n",
    "t_cpp_z_B_obs_reg.sample(n_samples,burn=n_burned_samples,   dbname='t_cpp_z_B_obs_reg_simple_acc.db', db='pickle')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Save models "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# a_cpp_t_B_obs_reg_simple=hddm.load(write_dir+'a_cpp_t_B_obs_reg_simple_acc')\n",
    "# a_cpp_v_B_obs_reg_simple=hddm.load(write_dir+'a_cpp_v_B_obs_reg_simple')\n",
    "# t_cpp_a_B_obs_reg_simple=hddm.load(write_dir+'t_cpp_a_B_obs_reg_simple')\n",
    "\n",
    "# t_cpp_v_B_obs_reg_simple=hddm.load(write_dir+'t_cpp_v_B_obs_reg_simple')\n",
    "# v_cpp_a_B_obs_reg_simple=hddm.load(write_dir+'v_cpp_a_B_obs_reg_simple')\n",
    "# v_cpp_t_B_obs_reg_simple=hddm.load(write_dir+'v_cpp_t_B_obs_reg_simple')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n",
      "WARNING: Will not save custom link functions.\n"
     ]
    }
   ],
   "source": [
    "#save models... many many samples, much time\n",
    "a_cpp_t_B_obs_reg.save(write_dir+'a_cpp_t_B_obs_reg_simple_acc')\n",
    "a_cpp_v_B_obs_reg.save(write_dir+'a_cpp_v_B_obs_reg_simple_acc')\n",
    "t_cpp_a_B_obs_reg.save(write_dir+'t_cpp_a_B_obs_reg_simple_acc')\n",
    "\n",
    "t_cpp_v_B_obs_reg.save(write_dir+'t_cpp_v_B_obs_reg_simple_acc')\n",
    "v_cpp_a_B_obs_reg.save(write_dir+'v_cpp_a_B_obs_reg_simple_acc')\n",
    "v_cpp_t_B_obs_reg.save(write_dir+'v_cpp_t_B_obs_reg_simple_acc')\n",
    "\n",
    "# # #save z models \n",
    "z_cpp_a_B_obs_reg.save(write_dir+'z_cpp_a_B_obs_reg_simple_acc')\n",
    "z_cpp_v_B_obs_reg.save(write_dir+'z_cpp_v_B_obs_reg_simple_acc')\n",
    "z_cpp_t_B_obs_reg.save(write_dir+'z_cpp_t_B_obs_reg_simple_acc')\n",
    "\n",
    "a_cpp_z_B_obs_reg.save(write_dir+'a_cpp_z_B_obs_reg_simple_acc')\n",
    "v_cpp_z_B_obs_reg.save(write_dir+'v_cpp_z_B_obs_reg_simple_acc')\n",
    "t_cpp_z_B_obs_reg.save(write_dir+'t_cpp_z_B_obs_reg_simple_acc')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n",
      "WARNING: Custom link functions will not be loaded.\n"
     ]
    }
   ],
   "source": [
    "#load models \n",
    "intercept_only_obs_reg_simple=hddm.load(write_dir+'intercept_only_obs_reg_simple')\n",
    "\n",
    "\n",
    "a_cpp_t_B_obs_reg_simple=hddm.load(write_dir+'a_cpp_t_B_obs_reg_simple')\n",
    "a_cpp_v_B_obs_reg_simple=hddm.load(write_dir+'a_cpp_v_B_obs_reg_simple')\n",
    "t_cpp_a_B_obs_reg_simple=hddm.load(write_dir+'t_cpp_a_B_obs_reg_simple')\n",
    "\n",
    "t_cpp_v_B_obs_reg_simple=hddm.load(write_dir+'t_cpp_v_B_obs_reg_simple')\n",
    "v_cpp_a_B_obs_reg_simple=hddm.load(write_dir+'v_cpp_a_B_obs_reg_simple')\n",
    "v_cpp_t_B_obs_reg_simple=hddm.load(write_dir+'v_cpp_t_B_obs_reg_simple')\n",
    "\n",
    "# # #save z models \n",
    "z_cpp_a_B_obs_reg_simple=hddm.load(write_dir+'z_cpp_a_B_obs_reg_simple')\n",
    "z_cpp_v_B_obs_reg_simple=hddm.load(write_dir+'z_cpp_v_B_obs_reg_simple')\n",
    "z_cpp_t_B_obs_reg_simple=hddm.load(write_dir+'z_cpp_t_B_obs_reg_simple')\n",
    "\n",
    "a_cpp_z_B_obs_reg_simple=hddm.load(write_dir+'a_cpp_z_B_obs_reg_simple')\n",
    "v_cpp_z_B_obs_reg_simple=hddm.load(write_dir+'v_cpp_z_B_obs_reg_simple')\n",
    "t_cpp_z_B_obs_reg_simple=hddm.load(write_dir+'t_cpp_z_B_obs_reg_simple')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Plot model fits"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "raw_dics = [a_cpp_t_B_obs_reg.dic, a_cpp_v_B_obs_reg.dic,t_cpp_a_B_obs_reg.dic,\n",
    "        t_cpp_v_B_obs_reg.dic, v_cpp_a_B_obs_reg.dic, v_cpp_t_B_obs_reg.dic, z_cpp_a_B_obs_reg.dic, z_cpp_v_B_obs_reg.dic, \n",
    "           z_cpp_t_B_obs_reg.dic,a_cpp_z_B_obs_reg.dic, v_cpp_z_B_obs_reg.dic, \n",
    "          t_cpp_z_B_obs_reg.dic ]\n",
    "m_names = ['a_cpp & t_B', 'a_cpp & v_B', 't_cpp & a_B', \n",
    "            't_cpp & v_B', 'v_cpp & a_B', 'v_cpp & t_B', \n",
    "          'z_cpp_a_B_obs_reg', 'z_cpp_v_B_obs_reg', 'z_cpp_t_B_obs_reg', 'a_cpp_z_B_obs_reg', 'v_cpp_z_B_obs_reg', 't_cpp_z_B_obs_reg' ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[-18113.17616099698,\n",
       " -23005.094406362736,\n",
       " -18103.685162339396,\n",
       " -23003.143940039488,\n",
       " -18213.683519463124,\n",
       " -18223.232258264128,\n",
       " -18108.704205435879,\n",
       " -23005.342780698789,\n",
       " -18120.728885816898,\n",
       " -18399.747183664607,\n",
       " -18492.575538717712,\n",
       " -18399.066651771911]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_dics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "# raw_dics = [a_cpp_t_B_obs_reg_simple.dic, a_cpp_v_B_obs_reg_simple.dic,t_cpp_a_B_obs_reg_simple.dic,\n",
    "#         t_cpp_v_B_obs_reg_simple.dic, v_cpp_a_B_obs_reg_simple.dic, v_cpp_t_B_obs_reg_simple.dic, z_cpp_a_B_obs_reg_simple.dic, z_cpp_v_B_obs_reg_simple.dic, \n",
    "#            z_cpp_t_B_obs_reg_simple.dic,a_cpp_z_B_obs_reg_simple.dic, v_cpp_z_B_obs_reg_simple.dic, \n",
    "#           t_cpp_z_B_obs_reg_simple.dic ]\n",
    "# m_names = ['a_cpp & t_B', 'a_cpp & v_B', 't_cpp & a_B', \n",
    "#             't_cpp & v_B', 'v_cpp & a_B', 'v_cpp & t_B', \n",
    "#           'z_cpp_a_B_obs_reg', 'z_cpp_v_B_obs_reg', 'z_cpp_t_B_obs_reg', 'a_cpp_z_B_obs_reg', 'v_cpp_z_B_obs_reg', 't_cpp_z_B_obs_reg' ]\n",
    "# # raw_dics - intercept_model.dic\n",
    "# #forgot to save intercept model... rerun"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    " intercept_subtracted_dics = raw_dics - intercept_model.dic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([  -41.31683595, -4933.23508132,   -31.82583729, -4931.28461499,\n",
       "        -141.82419442,  -151.37293322,   -36.84488039, -4933.48345565,\n",
       "         -48.86956077,  -327.88785862,  -420.71621367,  -327.20732673])"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "intercept_subtracted_dics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/ipykernel_launcher.py:2: VisibleDeprecationWarning: converting an array with ndim > 0 to an index will result in an error in the future\n",
      "  \n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "'z_cpp_v_B_obs_reg'"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "winner = np.where(intercept_subtracted_dics== min(intercept_subtracted_dics))[0]\n",
    "m_names[winner]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'All pairwise combinations of parameters and learning signals+ generative model')"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 7200x2160 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(100,30))\n",
    "sns.set(font_scale=3)  \n",
    "plt.bar(m_names, intercept_subtracted_dics)\n",
    "plt.ylim(min(intercept_subtracted_dics) - 100, max(intercept_subtracted_dics) + 500)\n",
    "plt.ylabel('DIC score')\n",
    "plt.title('All pairwise combinations of parameters and learning signals+ generative model')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(-23005.094406362736, -23003.143940039488)"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a_cpp_v_B_obs_reg.dic, t_cpp_v_B_obs_reg.dic"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Plot posteriors of regression coefficients"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/krista/anaconda3/lib/python3.5/site-packages/ipykernel_launcher.py:5: DeprecationWarning: \n",
      ".ix is deprecated. Please use\n",
      ".loc for label based indexing or\n",
      ".iloc for positional indexing\n",
      "\n",
      "See the documentation here:\n",
      "http://pandas.pydata.org/pandas-docs/stable/indexing.html#ix-indexer-is-deprecated\n",
      "  \"\"\"\n",
      "/home/krista/anaconda3/lib/python3.5/site-packages/ipykernel_launcher.py:6: DeprecationWarning: \n",
      ".ix is deprecated. Please use\n",
      ".loc for label based indexing or\n",
      ".iloc for positional indexing\n",
      "\n",
      "See the documentation here:\n",
      "http://pandas.pydata.org/pandas-docs/stable/indexing.html#ix-indexer-is-deprecated\n",
      "  \n"
     ]
    }
   ],
   "source": [
    "#plot posteriors for winning model \n",
    "# v_B = t_cpp_v_B_obs_reg.nodes_db.ix['v_B', 'node']\n",
    "# t_cpp = t_cpp_v_B_obs_reg.nodes_db.ix['t_cpp', 'node']\n",
    "\n",
    "v_B = a_cpp_v_B_obs_reg.nodes_db.ix['v_B', 'node']\n",
    "a_cpp = a_cpp_v_B_obs_reg.nodes_db.ix['a_cpp', 'node']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,0,'$\\\\beta_{v\\\\textasciitilde B}$')"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x1440 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set(font_scale=4) \n",
    "plt.figure(figsize=(30,20))\n",
    "sns.distplot(v_B.trace(), hist=False,rug=False,color='forestgreen', kde_kws = {'shade': True, 'linewidth': 3,                                                                                                'alpha': .8})\n",
    "plt.ylabel('Posterior probability density', fontsize='xx-large')\n",
    "plt.xlabel(r'$\\beta_{v\\textasciitilde B}$',fontsize='xx-large')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,0,'$\\\\beta_{a\\\\textasciitilde \\\\Omega}$')"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x1440 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set(font_scale=4) \n",
    "plt.figure(figsize=(30,20))\n",
    "sns.distplot(a_cpp.trace(), hist=False,rug=False,color='red', kde_kws = {'shade': True, 'linewidth': 3,                                                                                                'alpha': .8})\n",
    "plt.ylabel('Posterior probability density', fontsize='xx-large')\n",
    "plt.xlabel(r'$\\beta_{a\\textasciitilde \\Omega}$',fontsize='xx-large')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# sns.set(font_scale=3)  \n",
    "# hddm.analyze.plot_posterior_nodes([v_B])\n",
    "# plt.xlabel('drift-rate regression coefficient')\n",
    "# plt.ylabel('Posterior probability')\n",
    "# plt.title('Posteriors of belief-> drift-rate effect')\n",
    "# # plt.savefig('600a_drifa_conflict.pdf')\n",
    "\n",
    "\n",
    "# hddm.analyze.plot_posterior_nodes([a_cpp])\n",
    "# plt.xlabel('t regression coefficient')\n",
    "# plt.ylabel('Posterior probability')\n",
    "# plt.title('Posteriors of cpp-> a effect')\n",
    "# # plt.savefig('600a_bound_vol.pdf')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "P(a_cpp > 0) =  0.904210526316\n"
     ]
    }
   ],
   "source": [
    "print(\"P(a_cpp > 0) = \", (a_cpp.trace() > 0).mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "P(v_B < 0) =  1.0\n"
     ]
    },
    {
     "ename": "NameError",
     "evalue": "name 't_cpp' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-51-361ad0c16f01>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"P(v_B < 0) = \"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mv_B\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"P(t_cpp < 0) = \"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mt_cpp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"P(t_cpp > 0) = \"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mt_cpp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 't_cpp' is not defined"
     ]
    }
   ],
   "source": [
    "print(\"P(v_B < 0) = \", (v_B.trace() > 0).mean())\n",
    "\n",
    "print(\"P(t_cpp < 0) = \", (t_cpp.trace() < 0).mean())\n",
    "print(\"P(t_cpp > 0) = \", (t_cpp.trace() > 0).mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [],
   "source": [
    "v0 = a_cpp_v_B_obs_reg.nodes_db.ix[['v_Intercept'], 'mean'][0]\n",
    "v_beta = a_cpp_v_B_obs_reg.nodes_db.ix[['v_B'], 'mean'][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "a0 = a_cpp_v_B_obs_reg.nodes_db.ix[['a_Intercept'], 'mean'][0]\n",
    "a_beta = a_cpp_v_B_obs_reg.nodes_db.ix[['a_cpp'], 'mean'][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1.3015932421439282, 1.0628257257847002)"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "v0+v_beta, a0+a_beta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "#store all of the regression estimates \n",
    "all_obs_reg_data['v_reg'] = v0 + v_beta * all_obs_reg_data['ideal_B'] \n",
    "all_obs_reg_data['a_reg'] = a0 + a_beta * all_obs_reg_data['cpp'] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_obs_reg_data.to_csv('/Users/Krista/Dropbox/loki_0/simple_rt_experiment_probabilityC/analysis/aggregated_data/all_reg_obs_data.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# model_names_header = ', '.join(m_names)\n",
    "# print_dics = np.column_stack(dics)\n",
    "# np.savetxt(write_dir+'sim_test_gen_model.csv', print_dics, header=model_names_header, delimiter=',',comments='')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "hddm",
   "language": "python",
   "name": "hddm"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
